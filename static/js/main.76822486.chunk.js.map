{"version":3,"sources":["cnf-0-common/c-1-ui/input/InputNya.module.css","cnf-0-common/c-1-ui/button/ButtonNya.module.css","cnf-0-common/c-1-ui/link/LinkNya.module.css","cnf-0-common/c-1-ui/input/InputNya.tsx","cnf-0-common/c-1-ui/button/ButtonNya.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/Login.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/LoginActions.ts","cnf-1-main/m-2-bll/thunks.ts","cnf-1-main/m-3-dal/instance.ts","cnf-2-fatures/f-1-auth/a-1-login/l-3-dal/LoginAPI.ts","cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/LoginContainer.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/loginThunk.ts","cnf-0-common/c-1-ui/status/Status.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/LoginStatus.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/LoginPage.tsx","cnf-1-main/m-1-ui/main/routes/Pages.tsx","cnf-0-common/c-1-ui/link/LinkNya.tsx","cnf-1-main/m-1-ui/main/dev-header/DevHeader.tsx","cnf-1-main/m-1-ui/main/routes/Routes.tsx","cnf-1-main/m-1-ui/main/Main.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/LoginInitState.ts","cnf-1-main/m-2-bll/store.ts","cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/loginReducer.ts","cnf-1-main/m-1-ui/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","InputNya","React","memo","info","props","console","log","className","s","inputNya","ButtonNya","buttonNya","Login","email","setEmail","pass","setPass","remember","setRemember","signIn","loading","value","onChange","type","checked","onClick","disabled","LoginActions","success","error","tryCatch","logic","setError","a","response","data","message","instance","axios","create","baseURL","withCredentials","LoginAPI","password","rememberMe","post","LoginContainer","useState","setEmailCallback","useCallback","e","currentTarget","setPassCallback","setRememberCallback","dispatch","useDispatch","signInCallback","useSelector","store","login","Status","first","style","color","LoginStatus","LoginPage","redirect","setRedirect","setFirst","useEffect","setTimeout","pages","id","title","path","exact","page","LinkNya","link","mappedLinks","map","p","key","to","params","DevHeader","mappedRoutes","render","Routes","Main","loginInitState","reducers","combineReducers","state","action","createStore","applyMiddleware","thunkMiddleware","window","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.76822486.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputNya\":\"InputNya_inputNya__2oR82\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonNya\":\"ButtonNya_buttonNya__1V5iD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"LinkNya_link__3jo8H\"};","import React, {DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./InputNya.module.css\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\nexport type InputNyaPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n    & { info?: string };\r\n\r\nconst InputNya: React.FC<InputNyaPropsType> = React.memo((\r\n    {\r\n        info,\r\n        ...props\r\n    }\r\n) => {\r\n\r\n    DEV_VERSION && info && console.log('render InputNya-' + info);\r\n    return <input className={s.inputNya} {...props}/>;\r\n});\r\n\r\nexport default InputNya;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./ButtonNya.module.css\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\nexport type ButtonNyaPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n    & { info?: string };\r\n\r\nconst ButtonNya: React.FC<ButtonNyaPropsType> = React.memo((\r\n    {\r\n        info,\r\n        ...props\r\n    }\r\n) => {\r\n\r\n    DEV_VERSION && info && console.log('render ButtonNya-' + info);\r\n    return <button className={s.buttonNya} {...props}/>;\r\n});\r\n\r\nexport default ButtonNya;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport InputNya from \"../../../../cnf-0-common/c-1-ui/input/InputNya\";\r\nimport ButtonNya from \"../../../../cnf-0-common/c-1-ui/button/ButtonNya\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\ntype LoginPropsType = {\r\n    email: string;\r\n    setEmail: (email: ChangeEvent<HTMLInputElement>) => void;\r\n    pass: string;\r\n    setPass: (pass: ChangeEvent<HTMLInputElement>) => void;\r\n    remember: boolean;\r\n    setRemember: (remember: ChangeEvent<HTMLInputElement>) => void;\r\n\r\n    signIn: () => void;\r\n    loading: boolean;\r\n};\r\n\r\nconst Login: React.FC<LoginPropsType> = React.memo((\r\n    {email, setEmail, pass, setPass, remember, setRemember, signIn, loading}\r\n) => {\r\n\r\n    DEV_VERSION && console.log('render Login');\r\n    return (\r\n        <>\r\n            <div><InputNya info={'email'} value={email} onChange={setEmail}/></div>\r\n            <div><InputNya info={'pass'} value={pass} onChange={setPass}/></div>\r\n            <div>\r\n                <label>\r\n                    <InputNya type={'checkbox'} info={'remember'} checked={remember} onChange={setRemember}/>\r\n                    remember me\r\n                </label>\r\n            </div>\r\n            <div>forgot? (will be link)</div>\r\n            <div><ButtonNya info={'sign in'} onClick={signIn} disabled={loading}>sign in</ButtonNya></div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Login;\r\n","import {InferActionsType} from \"../../../../cnf-1-main/m-2-bll/actions\";\r\n\r\nexport type LoginActionsType = InferActionsType<typeof LoginActions>;\r\n\r\nexport const LoginActions = {\r\n    setLoading: (loading: boolean) => ({\r\n        type: 'login/SET_LOADING',\r\n        loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: 'login/SET_SUCCESS',\r\n        success,\r\n    } as const),\r\n    setError: (error: string) => ({\r\n        type: 'login/SET_ERROR',\r\n        error,\r\n    } as const),\r\n\r\n};\r\n","import {AppStoreType} from \"./store\";\r\nimport {DEV_VERSION} from \"../../config\";\r\n\r\nexport type ReturnVoid = void;\r\nexport type ExtraArgumentNya = {};\r\nexport type GetAppStoreType = () => AppStoreType;\r\n\r\nexport const tryCatch = async (\r\n    logic: () => void,\r\n    setError: (error: string) => void,\r\n    info: string\r\n) => {\r\n    try {\r\n        await logic();\r\n\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console');\r\n        setError(error);\r\n\r\n        DEV_VERSION && console.log('Nya, ' + info + ' Error!', {...e})\r\n    }\r\n};\r\n","import axios from \"axios\";\r\nimport {DEV_VERSION} from \"../../config\";\r\n\r\nexport const baseURL = !DEV_VERSION\r\n    ? 'http://localhost:7542/2.0/'\r\n    : 'https://neko-back.herokuapp.com/2.0/';\r\n\r\nexport const instance = axios.create({\r\n    baseURL,\r\n    withCredentials: true,\r\n});\r\n","import {instance} from \"../../../../cnf-1-main/m-3-dal/instance\";\r\n\r\nexport type UserType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar: string;\r\n    publicCardPacksCount: number;\r\n\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean;\r\n    rememberMe: boolean;\r\n}\r\n\r\n\r\nexport type SignInDataType = UserType & { error: string; };\r\n\r\nexport const LoginAPI = {\r\n    signIn: async (email: string, password: string, rememberMe: boolean) => {\r\n        const response = await instance.post<SignInDataType>('/auth/login', {email, password, rememberMe});\r\n\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import React, {ChangeEvent, useCallback, useState} from \"react\";\r\nimport Login from \"./Login\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {signIn} from \"../l-2-bll/loginThunk\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\n\r\nconst LoginContainer = React.memo(() => {\r\n    const [email, setEmail] = useState<string>(DEV_VERSION ? 'nya-admin@nya.nya' : '');\r\n    const [pass, setPass] = useState<string>(DEV_VERSION ? '1qazxcvBG' : '');\r\n    const [remember, setRemember] = useState<boolean>(false);\r\n\r\n    const setEmailCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value),\r\n        [setEmail]\r\n    );\r\n    const setPassCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setPass(e.currentTarget.value),\r\n        [setPass]\r\n    );\r\n    const setRememberCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setRemember(e.currentTarget.checked),\r\n        [setRemember]\r\n    );\r\n\r\n    const dispatch = useDispatch();\r\n    const signInCallback = useCallback(\r\n        () => dispatch(signIn(email, pass, remember)),\r\n        [email, pass, remember, dispatch]\r\n    );\r\n    const {loading} = useSelector((store: AppStoreType) => store.login);\r\n\r\n    DEV_VERSION && console.log('render LoginContainer');\r\n    return (\r\n        <Login\r\n            email={email} setEmail={setEmailCallback}\r\n            pass={pass} setPass={setPassCallback}\r\n            remember={remember} setRemember={setRememberCallback}\r\n            signIn={signInCallback}\r\n            loading={loading}\r\n        />\r\n    );\r\n});\r\n\r\nexport default LoginContainer;\r\n","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {LoginActions, LoginActionsType} from \"./LoginActions\";\r\nimport {ExtraArgumentNya, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {LoginAPI} from \"../l-3-dal/LoginAPI\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\nexport const signIn = (\r\n    email: string, password: string, rememberMe: boolean\r\n): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, LoginActionsType> => async (\r\n    dispatch,\r\n    // getStore: GetAppStoreType\r\n) => {\r\n    dispatch(LoginActions.setLoading(true));\r\n\r\n    await tryCatch(\r\n        async () => {\r\n            const data = await LoginAPI.signIn(email, password, rememberMe);\r\n\r\n            dispatch(LoginActions.setSuccess(true));\r\n            // dispatch(ProfileActions.setUser(data));\r\n\r\n            DEV_VERSION && console.log('Nya, Login Success!', data);\r\n        },\r\n        (e) => dispatch(LoginActions.setError(e)),\r\n        \"Login\"\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\nexport type StatusPropsType = {\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n\r\n    first: boolean;\r\n    info?: string;\r\n}\r\n\r\nconst Status: React.FC<StatusPropsType> = React.memo(({loading, success, error, first, info}) => {\r\n\r\n    DEV_VERSION && info && console.log('render Status-' + info);\r\n    if (first) return <div><br/></div>;\r\n    return (\r\n        <>\r\n            {loading\r\n                ? <div style={{color: 'orange'}}>loading...</div>\r\n                : error\r\n                    ? <div style={{color: 'red'}}>{error}</div>\r\n                    : success\r\n                        ? <div style={{color: 'lime'}}>Success!</div>\r\n                        : <div><br/></div>\r\n            }\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Status;\r\n","import React from \"react\";\r\nimport Status from \"../../../../cnf-0-common/c-1-ui/status/Status\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\ntype LoginStatusPropsType = {\r\n    first: boolean;\r\n}\r\n\r\nconst LoginStatus: React.FC<LoginStatusPropsType> = React.memo(({first}) => {\r\n    const {loading, success, error} = useSelector((store: AppStoreType) => store.login);\r\n\r\n    DEV_VERSION && console.log('render LoginStatus');\r\n    return <Status loading={loading} success={success} error={error} info={'login'} first={first}/>\r\n});\r\n\r\nexport default LoginStatus;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport LoginContainer from \"./LoginContainer\";\r\nimport LoginStatus from \"./LoginStatus\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {LoginActions} from \"../l-2-bll/LoginActions\";\r\n\r\nconst LoginPage = () => {\r\n    const {success, error} = useSelector((store: AppStoreType) => store.login);\r\n    const [redirect, setRedirect] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (first) {\r\n            if (success || error) dispatch(LoginActions.setError(''));\r\n\r\n            setFirst(false);\r\n        } else {\r\n\r\n            if (success && !redirect) setTimeout(() => setRedirect(true), 500);\r\n        }\r\n    }, [first, success, error, dispatch, setFirst, redirect, setRedirect]);\r\n\r\n    DEV_VERSION && console.log('render LoginPage');\r\n    // if (redirect && success && !first) return <Redirect to={PATH.PROFILE}/>;\r\n    return (\r\n        <div>\r\n            login\r\n            <LoginStatus first={first}/>\r\n            <LoginContainer/>\r\n            {/*<LinkNya to={PATH.REGISTER} info={'register in login'}>register</LinkNya>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, {ReactNode} from \"react\";\r\nimport {RouteComponentProps} from \"react-router-dom\";\r\nimport LoginPage from \"../../../../cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/LoginPage\";\r\n// import RegisterPage from \"../../../../cnf-2-fatures/f-1-auth/a-2-register/r-1-ui/RegisterPage\";\r\n// import ProfilePage from \"../../../../cnf-2-fatures/f-1-auth/a-7-profile/p-1-ui/ProfilePage\";\r\n// import PacksPage from \"../../../../cnf-2-fatures/f-2-cards/c-1-packs/p-1-ui/PacksPage\";\r\n// import CardsPage from \"../../../../cnf-2-fatures/f-2-cards/c-2-cards/c-1-ui/CardsPage\";\r\n// import LearnPage from \"../../../../cnf-2-fatures/f-3-learn/l-1-ui/LearnPage\";\r\n// import TestPage from \"../../../../cnf-2-fatures/f-4-file/f-1-ui/TestPage\";\r\n\r\nexport type PageType = {\r\n    id: number;\r\n    title: string;\r\n    path?: string;\r\n    params?: string;\r\n    exact?: boolean;\r\n    page: (props: RouteComponentProps<any>) => ReactNode;\r\n};\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    // REGISTER: '/register',\r\n    // PROFILE: '/profile',\r\n    // PACKS: '/packs',\r\n    // CARDS: '/cards',\r\n    // LEARN: '/learn',\r\n    // TEST: '/text',\r\n};\r\n\r\nexport const pages: PageType[] = [\r\n    {id: 0, title: 'login', path: PATH.LOGIN, exact: true, page: () => <LoginPage/>},\r\n    // {id: 1, title: 'register', path: PATH.REGISTER, exact: true, page: () => <RegisterPage/>},\r\n    // // {\r\n    // //     id: 2, title: 'profile', path: PATH.PROFILE, params: '/:id', exact: true,\r\n    // //     page: (p) => <div>{p.match.params.id}</div>\r\n    // // },\r\n    // {id: 2, title: 'profile', path: PATH.PROFILE, exact: true, page: () => <ProfilePage/>},\r\n    // {id: 3, title: 'packs', path: PATH.PACKS, exact: true, page: () => <PacksPage/>},\r\n    // {id: 4, title: 'cards', path: PATH.CARDS, params: '/:id', exact: true, page: () => <CardsPage/>},\r\n    // {id: 5, title: 'learn', path: PATH.LEARN, params: '/:id', exact: true, page: () => <LearnPage/>},\r\n    // {id: 6, title: 'test', path: PATH.TEST, exact: true, page: () => <TestPage/>},\r\n\r\n    {id: 9999, title: 'error404', page: () => <div>error404</div>}\r\n];\r\n","import React from \"react\";\r\nimport {NavLink, NavLinkProps} from \"react-router-dom\";\r\nimport s from \"./LinkNya.module.css\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\nexport type LinkNyaPropsType = NavLinkProps & { info?: string };\r\n\r\nconst LinkNya: React.FC<LinkNyaPropsType> = React.memo((\r\n    {\r\n        info,\r\n        ...props\r\n    }\r\n) => {\r\n\r\n    DEV_VERSION && info && console.log('render LinkNya-' + info);\r\n    return <NavLink className={s.link} {...props}/>;\r\n});\r\n\r\nexport default LinkNya;\r\n","import React from \"react\";\r\nimport {pages} from \"../routes/Pages\";\r\nimport LinkNya from \"../../../../cnf-0-common/c-1-ui/link/LinkNya\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\nconst mappedLinks = pages.map(p => (\r\n    <LinkNya\r\n        key={'navLink-' + p.id}\r\n        to={(p.path || '') + (p.params ? '/1' : '')}\r\n        info={'navLink-' + p.id}\r\n    >\r\n        {p.title}\r\n    </LinkNya>\r\n));\r\n\r\nconst DevHeader = () => {\r\n\r\n    DEV_VERSION && console.log('render DevHeader');\r\n    return (\r\n        <>\r\n            {mappedLinks}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DevHeader;\r\n","import React from \"react\";\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport {PageType, pages} from \"./Pages\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\nconst mappedRoutes = pages.map((p: PageType) => (\r\n    <Route\r\n        key={'route-' + p.id}\r\n        path={p.path && (p.path + (p.params || ''))}\r\n        exact={p.exact}\r\n        render={p.page}\r\n    />\r\n));\r\n\r\nconst Routes = () => {\r\n\r\n    DEV_VERSION && console.log('render Routes');\r\n    return (\r\n        <Switch>\r\n            {mappedRoutes}\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport DevHeader from \"./dev-header/DevHeader\";\r\nimport Routes from \"./routes/Routes\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\n// headers, routes, footers\r\nconst Main = () => {\r\n\r\n    DEV_VERSION && console.log('render Main');\r\n    return (\r\n        <>\r\n            {DEV_VERSION && <DevHeader/>}\r\n\r\n            <Routes/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","export type LoginStateType = {\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n}\r\n\r\nexport const loginInitState: LoginStateType = {\r\n    loading: false,\r\n    success: false,\r\n    error: '',\r\n};\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {loginReducer} from \"../../cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/loginReducer\";\r\n// import {registerReducer} from \"../../cnf-2-fatures/f-1-auth/a-2-register/r-2-bll/registerReducer\";\r\nimport {DEV_VERSION} from \"../../config\";\r\n// import {profileReducer} from \"../../cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/profileReducer\";\r\n// import {packsReducer} from \"../../cnf-2-fatures/f-2-cards/c-1-packs/p-2-bll/packsReducer\";\r\n// import {cardsReducer} from \"../../cnf-2-fatures/f-2-cards/c-2-cards/c-2-bll/cardsReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    login: loginReducer,\r\n    // register: registerReducer,\r\n    //\r\n    // profile: profileReducer,\r\n    //\r\n    // packs: packsReducer,\r\n    // cards: cardsReducer,\r\n\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\nif (DEV_VERSION) {\r\n    // @ts-ignore\r\n    window.store = store; // for dev\r\n}\r\n","import {loginInitState, LoginStateType} from \"./LoginInitState\";\r\nimport {LoginActionsType} from \"./LoginActions\";\r\n\r\nexport const loginReducer = (state = loginInitState, action: LoginActionsType): LoginStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET_ERROR': {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false,\r\n                success: false,\r\n            }\r\n        }\r\n        case 'login/SET_LOADING': {\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                loading: action.loading,\r\n                success: false,\r\n            }\r\n        }\r\n        case 'login/SET_SUCCESS': {\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                loading: false,\r\n                success: action.success,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport Main from \"./main/Main\";\r\nimport store from \"../m-2-bll/store\";\r\nimport {DEV_VERSION} from \"../../config\";\r\n\r\n// add context\r\nconst App = () => {\r\n\r\n    DEV_VERSION && console.log('render App');\r\n    return (\r\n        <div className=\"App\">\r\n            <HashRouter>\r\n                <Provider store={store}>\r\n                    <Main/>\r\n                </Provider>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './cnf-1-main/m-1-ui/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}