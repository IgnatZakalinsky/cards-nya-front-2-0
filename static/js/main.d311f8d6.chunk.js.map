{"version":3,"sources":["cnf-0-common/c-1-ui/editableSpan/EditableSpanNya.module.css","cnf-0-common/c-1-ui/input/InputNya.module.css","cnf-0-common/c-1-ui/button/ButtonNya.module.css","cnf-0-common/c-1-ui/link/LinkNya.module.css","cnf-0-common/c-1-ui/input/InputNya.tsx","cnf-0-common/c-1-ui/button/ButtonNya.tsx","cnf-0-common/c-1-ui/link/LinkNya.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/Login.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/LoginActions.ts","cnf-1-main/m-2-bll/thunks.ts","cnf-1-main/m-3-dal/instance.ts","cnf-2-fatures/f-1-auth/a-1-login/l-3-dal/LoginAPI.ts","cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/ProfileActions.ts","cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/LoginContainer.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/loginThunk.ts","cnf-0-common/c-1-ui/status/Status.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/LoginStatus.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/LoginPage.tsx","cnf-2-fatures/f-1-auth/a-2-register/r-1-ui/Register.tsx","cnf-2-fatures/f-1-auth/a-2-register/r-2-bll/RegisterActions.ts","cnf-2-fatures/f-1-auth/a-2-register/r-3-dal/RegisterAPI.ts","cnf-2-fatures/f-1-auth/a-2-register/r-1-ui/RegisterContainer.tsx","cnf-2-fatures/f-1-auth/a-2-register/r-2-bll/registerThunk.ts","cnf-2-fatures/f-1-auth/a-2-register/r-1-ui/RegisterStatus.tsx","cnf-2-fatures/f-1-auth/a-2-register/r-1-ui/RegisterPage.tsx","cnf-2-fatures/f-1-auth/a-7-profile/p-3-dal/ProfileAPI.ts","cnf-2-fatures/f-1-auth/a-7-profile/p-1-ui/ProfileStatus.tsx","cnf-0-common/c-1-ui/editableSpan/EditableSpanNya.tsx","cnf-2-fatures/f-1-auth/a-7-profile/p-1-ui/Profile.tsx","cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/ProfileInitState.ts","cnf-2-fatures/f-1-auth/a-7-profile/p-1-ui/ProfileContainer.tsx","cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/thunks/updateUserThunk.ts","cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/thunks/logOutThunk.ts","cnf-2-fatures/f-1-auth/a-7-profile/p-1-ui/ProfilePage.tsx","cnf-0-common/c-1-ui/redirect/AuthRedirectPage.tsx","cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/thunks/getMeThunk.ts","cnf-2-fatures/f-1-auth/a-3-forgot/f-1-ui/ForgotStatus.tsx","cnf-2-fatures/f-1-auth/a-3-forgot/f-1-ui/Forgot.tsx","cnf-2-fatures/f-1-auth/a-3-forgot/f-2-bll/ForgotActions.ts","cnf-2-fatures/f-1-auth/a-3-forgot/f-3-dal/ForgotAPI.ts","cnf-2-fatures/f-1-auth/a-3-forgot/f-1-ui/ForgotContainer.tsx","cnf-2-fatures/f-1-auth/a-3-forgot/f-2-bll/forgotThunk.ts","cnf-2-fatures/f-1-auth/a-3-forgot/f-1-ui/ForgotPage.tsx","cnf-2-fatures/f-1-auth/a-4-setPass/s-1-ui/SetPassStatus.tsx","cnf-2-fatures/f-1-auth/a-4-setPass/s-1-ui/SetPass.tsx","cnf-2-fatures/f-1-auth/a-4-setPass/s-2-bll/SetPassActions.ts","cnf-2-fatures/f-1-auth/a-4-setPass/s-3-dal/SetPassAPI.ts","cnf-2-fatures/f-1-auth/a-4-setPass/s-1-ui/SetPassContainer.tsx","cnf-2-fatures/f-1-auth/a-4-setPass/s-2-bll/setPassThunk.ts","cnf-2-fatures/f-1-auth/a-4-setPass/s-1-ui/SetPassPage.tsx","cnf-2-fatures/f-2-cards/c-1-packs/p-3-dal/PacksAPI.ts","cnf-2-fatures/f-2-cards/c-1-packs/p-2-bll/PacksActions.ts","cnf-2-fatures/f-2-cards/c-1-packs/p-2-bll/getPacksThunk.ts","cnf-0-common/c-1-ui/table/TableNya.tsx","cnf-2-fatures/f-2-cards/c-1-packs/p-1-ui/PacksContainer.tsx","cnf-2-fatures/f-2-cards/c-1-packs/p-1-ui/PacksModel.tsx","cnf-2-fatures/f-2-cards/c-1-packs/p-2-bll/addPackThunk.ts","cnf-2-fatures/f-2-cards/c-1-packs/p-2-bll/deletePackThunk.ts","cnf-2-fatures/f-2-cards/c-1-packs/p-2-bll/updatePackThunk.ts","cnf-2-fatures/f-2-cards/c-1-packs/p-1-ui/PacksPage.tsx","cnf-2-fatures/f-2-cards/c-2-cards/c-3-dal/CardsAPI.ts","cnf-2-fatures/f-2-cards/c-2-cards/c-2-bll/CardsActions.ts","cnf-2-fatures/f-2-cards/c-2-cards/c-2-bll/getCardsThunk.ts","cnf-2-fatures/f-2-cards/c-2-cards/c-1-ui/CardsContainer.tsx","cnf-2-fatures/f-2-cards/c-2-cards/c-1-ui/CardsModel.tsx","cnf-2-fatures/f-2-cards/c-2-cards/c-2-bll/addCardThunk.ts","cnf-2-fatures/f-2-cards/c-2-cards/c-2-bll/deleteCardThunk.ts","cnf-2-fatures/f-2-cards/c-2-cards/c-2-bll/updateCardThunk.ts","cnf-2-fatures/f-2-cards/c-2-cards/c-1-ui/CardsPage.tsx","cnf-1-main/m-1-ui/main/routes/Pages.tsx","cnf-1-main/m-1-ui/main/dev-header/DevHeader.tsx","cnf-1-main/m-1-ui/main/routes/Routes.tsx","cnf-1-main/m-1-ui/main/Main.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/LoginInitState.ts","cnf-2-fatures/f-1-auth/a-2-register/r-2-bll/RegisterInitState.ts","cnf-2-fatures/f-1-auth/a-3-forgot/f-2-bll/ForgotInitState.ts","cnf-2-fatures/f-1-auth/a-4-setPass/s-2-bll/SetPassInitState.ts","cnf-2-fatures/f-2-cards/c-1-packs/p-2-bll/PacksInitState.ts","cnf-2-fatures/f-2-cards/c-2-cards/c-2-bll/CardsInitState.ts","cnf-1-main/m-2-bll/store.ts","cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/loginReducer.ts","cnf-2-fatures/f-1-auth/a-2-register/r-2-bll/registerReducer.ts","cnf-2-fatures/f-1-auth/a-3-forgot/f-2-bll/forgotReducer.ts","cnf-2-fatures/f-1-auth/a-4-setPass/s-2-bll/setPassReducer.ts","cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/profileReducer.ts","cnf-2-fatures/f-2-cards/c-1-packs/p-2-bll/packsReducer.ts","cnf-2-fatures/f-2-cards/c-2-cards/c-2-bll/cardsReducer.ts","cnf-1-main/m-1-ui/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","InputNya","React","memo","onChange","onChangeText","onChangeChecked","info","props","onChangeCallback","useCallback","e","currentTarget","value","checked","console","log","className","s","inputNya","ButtonNya","buttonNya","LinkNya","link","Login","email","setEmail","pass","setPass","remember","setRemember","signIn","loading","type","to","PATH","FORGOT","onClick","disabled","LoginActions","success","error","tryCatch","logic","setError","a","response","data","message","instance","axios","create","baseURL","withCredentials","LoginAPI","password","rememberMe","post","ProfileActions","user","LoginContainer","useState","dispatch","useDispatch","signInCallback","useSelector","store","login","Status","first","style","color","LoginStatus","LoginPage","redirect","setRedirect","setFirst","useEffect","setTimeout","PROFILE","REGISTER","Register","pass2","setPass2","signUp","RegisterActions","RegisterAPI","RegisterContainer","signUpCallback","register","RegisterStatus","RegisterPage","LOGIN","ProfileAPI","getMe","updateUser","name","avatar","put","logOut","delete","getUsers","get","sendGeneralChatMessage","getGeneralChatMessages","ProfileStatus","profile","EditableSpanNya","onBlur","autoFocus","spanProps","onDoubleClick","undefined","children","restSpanProps","editMode","setEditMode","offEditMode","onEditMode","spanNya","Profile","setAvatar","setName","update","logOutCallback","src","alt","height","FakeUser","_id","publicCardPacksCount","created","Date","updated","isAdmin","verified","ProfileInitState","ProfileContainer","updatedUser","ProfilePage","AuthRedirectPage","restProps","firstRendering","setFirstRendering","spin","setSpin","ForgotStatus","forgot","Forgot","ForgotActions","ForgotAPI","from","ForgotContainer","forgotCallback","ForgotPage","SetPassStatus","SetPass","setPassCallback","SetPassActions","SetPassAPI","resetPasswordToken","SetPassContainer","token","useParams","setPassword","SetPassPage","PacksAPI","getPacks","packUser_id","addPack","cardsPack","updatePack","id","deckCover","deletePack","PacksActions","packs","getStore","cardPacks","TableNya","title","model","headerStyle","tableStyle","rowsStyle","rowStyle","margin","border","width","display","map","m","index","dataItem","dataIndex","key","modelIndex","render","PacksContainer","myPacks","setMyPacks","add","del","setMyPacksCallback","target","cardsCount","slice","CARDS","PacksPage","CardsAPI","getCards","cardsPack_id","addCard","card","question","grade","Math","random","questionImg","updateCard","answerImg","comments","deleteCard","CardsActions","cards","CardsContainer","card_id","pack_id","answer","toFixed","answerVideo","questionVideo","CardsPage","SET_PASS","PACKS","pages","path","exact","page","params","mappedLinks","p","DevHeader","mappedRoutes","Routes","Main","loginInitState","RegisterInitState","ForgotInitState","SetPassInitState","PacksInitState","CardsInitState","reducers","combineReducers","state","action","createStore","applyMiddleware","thunkMiddleware","window","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d311f8d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputNya\":\"EditableSpanNya_inputNya__5OL0Z\",\"spanNya\":\"EditableSpanNya_spanNya__2QfJw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputNya\":\"InputNya_inputNya__2cO9w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonNya\":\"ButtonNya_buttonNya__23oph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"LinkNya_link__1dIGu\"};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, useCallback} from \"react\";\r\nimport s from \"./InputNya.module.css\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\nexport type InputNyaPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> & {\r\n    onChangeText?: (value: string) => void;\r\n    onChangeChecked?: (checked: boolean) => void;\r\n\r\n    info?: string;\r\n};\r\n\r\nconst InputNya: React.FC<InputNyaPropsType> = React.memo((\r\n    {\r\n        onChange, onChangeText, onChangeChecked,\r\n\r\n        info,\r\n        ...props\r\n    }\r\n) => {\r\n    const onChangeCallback = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }, [onChange, onChangeText, onChangeChecked]);\r\n\r\n    DEV_VERSION && info && console.log(\"render InputNya-\" + info);\r\n    return (\r\n        <input\r\n            onChange={onChangeCallback}\r\n\r\n            className={s.inputNya}\r\n            {...props}\r\n        />\r\n    );\r\n});\r\n\r\nexport default InputNya;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./ButtonNya.module.css\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\nexport type ButtonNyaPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n    & { info?: string };\r\n\r\nconst ButtonNya: React.FC<ButtonNyaPropsType> = React.memo((\r\n    {\r\n        info,\r\n        ...props\r\n    }\r\n) => {\r\n\r\n    DEV_VERSION && info && console.log(\"render ButtonNya-\" + info);\r\n    return <button className={s.buttonNya} {...props}/>;\r\n});\r\n\r\nexport default ButtonNya;\r\n","import React from \"react\";\r\nimport {NavLink, NavLinkProps} from \"react-router-dom\";\r\nimport s from \"./LinkNya.module.css\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\nexport type LinkNyaPropsType = NavLinkProps & { info?: string };\r\n\r\nconst LinkNya: React.FC<LinkNyaPropsType> = React.memo((\r\n    {\r\n        info,\r\n        ...props\r\n    }\r\n) => {\r\n\r\n    DEV_VERSION && info && console.log(\"render LinkNya-\" + info);\r\n    return <NavLink className={s.link} {...props}/>;\r\n});\r\n\r\nexport default LinkNya;\r\n","import React from \"react\";\r\nimport InputNya from \"../../../../cnf-0-common/c-1-ui/input/InputNya\";\r\nimport ButtonNya from \"../../../../cnf-0-common/c-1-ui/button/ButtonNya\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {PATH} from \"../../../../cnf-1-main/m-1-ui/main/routes/Pages\";\r\nimport LinkNya from \"../../../../cnf-0-common/c-1-ui/link/LinkNya\";\r\n\r\ntype LoginPropsType = {\r\n    email: string;\r\n    setEmail: (email: string) => void;\r\n    pass: string;\r\n    setPass: (pass: string) => void;\r\n    remember: boolean;\r\n    setRemember: (remember: boolean) => void;\r\n\r\n    signIn: () => void;\r\n    loading: boolean;\r\n};\r\n\r\nconst Login: React.FC<LoginPropsType> = React.memo((\r\n    {email, setEmail, pass, setPass, remember, setRemember, signIn, loading}\r\n) => {\r\n\r\n    DEV_VERSION && console.log(\"render Login\");\r\n    return (\r\n        <>\r\n            <div><InputNya info={\"email\"} value={email} onChangeText={setEmail}/></div>\r\n            <div><InputNya info={\"pass\"} value={pass} onChangeText={setPass}/></div>\r\n            <div>\r\n                <label>\r\n                    <InputNya type={\"checkbox\"} info={\"remember\"} checked={remember} onChangeChecked={setRemember}/>\r\n                    remember me\r\n                </label>\r\n            </div>\r\n            <div><LinkNya to={PATH.FORGOT} info={\"forgot in login\"}>forgot?</LinkNya></div>\r\n            <div><ButtonNya info={\"sign in\"} onClick={signIn} disabled={loading}>sign in</ButtonNya></div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Login;\r\n","import {InferActionsType} from \"../../../../cnf-1-main/m-2-bll/actions\";\r\n\r\nexport type LoginActionsType = InferActionsType<typeof LoginActions>;\r\n\r\nexport const LoginActions = {\r\n    setLoading: (loading: boolean) => ({\r\n        type: \"login/SET_LOADING\",\r\n        loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: \"login/SET_SUCCESS\",\r\n        success,\r\n    } as const),\r\n    setError: (error: string) => ({\r\n        type: \"login/SET_ERROR\",\r\n        error,\r\n    } as const),\r\n\r\n};\r\n","import {AppStoreType} from \"./store\";\r\nimport {DEV_VERSION} from \"../../config\";\r\n\r\nexport type ReturnVoid = void;\r\nexport type ExtraArgumentNya = {};\r\nexport type GetAppStoreType = () => AppStoreType;\r\n\r\nexport const tryCatch = async (\r\n    logic: () => void,\r\n    setError: (error: string) => void,\r\n    info: string\r\n) => {\r\n    try {\r\n        await logic();\r\n\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (e.message + \", more details in the console\");\r\n        setError(error);\r\n\r\n        DEV_VERSION && console.log(\"Nya, \" + info + \" Error!\", {...e})\r\n    }\r\n};\r\n","import axios from \"axios\";\r\nimport {DEV_VERSION} from \"../../config\";\r\n\r\n// 3\r\n\r\nexport const baseURL = !DEV_VERSION\r\n    ? \"http://localhost:7542/2.0/\"\r\n    : \"https://neko-back.herokuapp.com/2.0/\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL,\r\n    withCredentials: true,\r\n});\r\n","import {instance} from \"../../../../cnf-1-main/m-3-dal/instance\";\r\nimport {UserType} from \"../../a-7-profile/p-2-bll/ProfileInitState\";\r\n\r\nexport type SignInDataType = UserType & { error: string; };\r\n\r\nexport const LoginAPI = {\r\n    signIn: async (email: string, password: string, rememberMe: boolean) => {\r\n        const response = await instance.post<SignInDataType>(\"/auth/login\", {email, password, rememberMe});\r\n\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import {InferActionsType} from \"../../../../cnf-1-main/m-2-bll/actions\";\r\nimport {UserType} from \"./ProfileInitState\";\r\n\r\nexport type ProfileActionsType = InferActionsType<typeof ProfileActions>;\r\n\r\nexport const ProfileActions = {\r\n    setLoading: (loading: boolean) => ({\r\n        type: \"profile/SET_LOADING\",\r\n        loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: \"profile/SET_SUCCESS\",\r\n        success,\r\n    } as const),\r\n    setError: (error: string) => ({\r\n        type: \"profile/SET_ERROR\",\r\n        error,\r\n    } as const),\r\n\r\n    setUser: (user: UserType) => ({\r\n        type: \"profile/SET_USER\",\r\n        user,\r\n    } as const),\r\n\r\n};\r\n","import React, {useCallback, useState} from \"react\";\r\nimport Login from \"./Login\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {signIn} from \"../l-2-bll/loginThunk\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\n\r\nconst LoginContainer = React.memo(() => {\r\n    const [email, setEmail] = useState<string>(DEV_VERSION ? \"nya-admin@nya.nya\" : \"\");\r\n    const [pass, setPass] = useState<string>(DEV_VERSION ? \"1qazxcvBG\" : \"\");\r\n    const [remember, setRemember] = useState<boolean>(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const signInCallback = useCallback(\r\n        () => dispatch(signIn(email, pass, remember)),\r\n        [email, pass, remember, dispatch]\r\n    );\r\n    const {loading} = useSelector((store: AppStoreType) => store.login);\r\n\r\n    DEV_VERSION && console.log(\"render LoginContainer\");\r\n    return (\r\n        <Login\r\n            email={email} setEmail={setEmail}\r\n            pass={pass} setPass={setPass}\r\n            remember={remember} setRemember={setRemember}\r\n            signIn={signInCallback}\r\n            loading={loading}\r\n        />\r\n    );\r\n});\r\n\r\nexport default LoginContainer;\r\n","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {LoginActions, LoginActionsType} from \"./LoginActions\";\r\nimport {ExtraArgumentNya, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {LoginAPI} from \"../l-3-dal/LoginAPI\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {ProfileActions, ProfileActionsType} from \"../../a-7-profile/p-2-bll/ProfileActions\";\r\n\r\nexport const signIn = (\r\n    email: string, password: string, rememberMe: boolean\r\n): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, LoginActionsType | ProfileActionsType> => async (\r\n    dispatch,\r\n    // getStore: GetAppStoreType\r\n) => {\r\n    dispatch(LoginActions.setLoading(true));\r\n\r\n    await tryCatch(\r\n        async () => {\r\n            const data = await LoginAPI.signIn(email, password, rememberMe);\r\n\r\n            dispatch(LoginActions.setSuccess(true));\r\n            dispatch(ProfileActions.setUser(data));\r\n\r\n            DEV_VERSION && console.log(\"Nya, Login Success!\", data);\r\n        },\r\n        (e) => dispatch(LoginActions.setError(e)),\r\n        \"Login\",\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\nexport type StatusPropsType = {\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n\r\n    first: boolean;\r\n    info?: string;\r\n}\r\n\r\nconst Status: React.FC<StatusPropsType> = React.memo(({loading, success, error, first, info}) => {\r\n\r\n    DEV_VERSION && info && console.log(\"render Status-\" + info);\r\n    if (first) return <div><br/></div>;\r\n\r\n    return (\r\n        <>\r\n            {loading\r\n                ? <div style={{color: \"orange\"}}>loading...</div>\r\n                : error\r\n                    ? <div style={{color: \"red\"}}>{error}</div>\r\n                    : success\r\n                        ? <div style={{color: \"lime\"}}>Success!</div>\r\n                        : <div><br/></div>\r\n            }\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Status;\r\n","import React from \"react\";\r\nimport Status from \"../../../../cnf-0-common/c-1-ui/status/Status\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\ntype LoginStatusPropsType = {\r\n    first: boolean;\r\n}\r\n\r\nconst LoginStatus: React.FC<LoginStatusPropsType> = React.memo(({first}) => {\r\n    const {loading, success, error} = useSelector((store: AppStoreType) => store.login);\r\n\r\n    DEV_VERSION && console.log(\"render LoginStatus\");\r\n    return <Status loading={loading} success={success} error={error} info={\"login\"} first={first}/>\r\n});\r\n\r\nexport default LoginStatus;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport LoginContainer from \"./LoginContainer\";\r\nimport LoginStatus from \"./LoginStatus\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {LoginActions} from \"../l-2-bll/LoginActions\";\r\nimport {PATH} from \"../../../../cnf-1-main/m-1-ui/main/routes/Pages\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport LinkNya from \"../../../../cnf-0-common/c-1-ui/link/LinkNya\";\r\n\r\nconst LoginPage = () => {\r\n    const {success, error} = useSelector((store: AppStoreType) => store.login);\r\n    const [redirect, setRedirect] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (first) {\r\n            if (success || error) dispatch(LoginActions.setError(\"\"));\r\n\r\n            setFirst(false);\r\n        } else {\r\n\r\n            if (success && !redirect) setTimeout(() => setRedirect(true), 500);\r\n        }\r\n    }, [first, success, error, dispatch, setFirst, redirect, setRedirect]);\r\n\r\n    DEV_VERSION && console.log(\"render LoginPage\");\r\n    if (redirect && success && !first) return <Redirect to={PATH.PROFILE}/>;\r\n    return (\r\n        <div>\r\n            login\r\n            <LoginStatus first={first}/>\r\n            <LoginContainer/>\r\n            <LinkNya to={PATH.REGISTER} info={\"register in login\"}>register</LinkNya>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport InputNya from \"../../../../cnf-0-common/c-1-ui/input/InputNya\";\r\nimport ButtonNya from \"../../../../cnf-0-common/c-1-ui/button/ButtonNya\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\ntype RegisterPropsType = {\r\n    email: string;\r\n    setEmail: (email: string) => void;\r\n    pass: string;\r\n    setPass: (pass: string) => void;\r\n    pass2: string;\r\n    setPass2: (pass2: string) => void;\r\n\r\n    signUp: () => void;\r\n    loading: boolean\r\n};\r\n\r\nconst Register: React.FC<RegisterPropsType> = React.memo((\r\n    {email, setEmail, pass, setPass, pass2, setPass2, signUp, loading}\r\n) => {\r\n\r\n    DEV_VERSION && console.log(\"render Register\");\r\n    return (\r\n        <>\r\n            <div><InputNya info={\"email\"} value={email} onChangeText={setEmail}/></div>\r\n            <div><InputNya info={\"pass\"} value={pass} onChangeText={setPass}/></div>\r\n            <div><InputNya info={\"pass confirm\"} value={pass2} onChangeText={setPass2}/></div>\r\n            <div><ButtonNya info={\"sign up\"} onClick={signUp} disabled={loading}>sign up</ButtonNya></div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Register;\r\n","import {InferActionsType} from \"../../../../cnf-1-main/m-2-bll/actions\";\r\n\r\nexport type RegisterActionsType = InferActionsType<typeof RegisterActions>;\r\n\r\nexport const RegisterActions = {\r\n    setLoading: (loading: boolean) => ({\r\n        type: \"register/SET_LOADING\",\r\n        loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: \"register/SET_SUCCESS\",\r\n        success,\r\n    } as const),\r\n    setError: (error: string) => ({\r\n        type: \"register/SET_ERROR\",\r\n        error,\r\n    } as const),\r\n\r\n};\r\n","import {instance} from \"../../../../cnf-1-main/m-3-dal/instance\";\r\n\r\nexport type RegisterDataType = {\r\n    error: string;\r\n}\r\n\r\nexport const RegisterAPI = {\r\n    signUp: async (email: string, password: string) => {\r\n        const response = await instance.post<RegisterDataType>(\"/auth/register\", {email, password});\r\n\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import React, {useCallback, useState} from \"react\";\r\nimport Register from \"./Register\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {signUp} from \"../r-2-bll/registerThunk\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\n\r\nconst RegisterContainer = React.memo(() => {\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    const [pass, setPass] = useState<string>(\"\");\r\n    const [pass2, setPass2] = useState<string>(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const signUpCallback = useCallback(\r\n        () => dispatch(signUp(email, pass, pass2)),\r\n        [email, pass, pass2, dispatch]\r\n    );\r\n    const {loading} = useSelector((store: AppStoreType) => store.register);\r\n\r\n    DEV_VERSION && console.log(\"render RegisterContainer\");\r\n    return (\r\n        <Register\r\n            email={email} setEmail={setEmail}\r\n            pass={pass} setPass={setPass}\r\n            pass2={pass2} setPass2={setPass2}\r\n            signUp={signUpCallback}\r\n            loading={loading}\r\n        />\r\n    );\r\n});\r\n\r\nexport default RegisterContainer;\r\n","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {RegisterActions, RegisterActionsType} from \"./RegisterActions\";\r\nimport {RegisterAPI} from \"../r-3-dal/RegisterAPI\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\nexport const signUp = (\r\n    email: string, password: string, pass2: string\r\n): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, RegisterActionsType> => async (\r\n    dispatch,\r\n    // getStore: GetAppStoreType\r\n) => {\r\n    dispatch(RegisterActions.setLoading(true));\r\n\r\n    await tryCatch(\r\n        async () => {\r\n            if (password !== pass2) dispatch(RegisterActions.setError(\"Passwords don't match!\"));\r\n            else {\r\n\r\n                const data = await RegisterAPI.signUp(email, password);\r\n\r\n                dispatch(RegisterActions.setSuccess(true));\r\n\r\n                DEV_VERSION && console.log(\"Nya, Register Success!\", data);\r\n            }\r\n        },\r\n        (e) => dispatch(RegisterActions.setError(e)),\r\n        \"Register\",\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport Status from \"../../../../cnf-0-common/c-1-ui/status/Status\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\ntype RegisterStatusPropsType = {\r\n    first: boolean;\r\n}\r\n\r\nconst RegisterStatus: React.FC<RegisterStatusPropsType> = React.memo(({first}) => {\r\n    const {loading, success, error} = useSelector((store: AppStoreType) => store.register);\r\n\r\n    DEV_VERSION && console.log(\"render RegisterStatus\");\r\n    return <Status loading={loading} success={success} error={error} info={\"register\"} first={first}/>\r\n});\r\n\r\nexport default RegisterStatus;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport RegisterContainer from \"./RegisterContainer\";\r\nimport LinkNya from \"../../../../cnf-0-common/c-1-ui/link/LinkNya\";\r\nimport {PATH} from \"../../../../cnf-1-main/m-1-ui/main/routes/Pages\";\r\nimport RegisterStatus from \"./RegisterStatus\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RegisterActions} from \"../r-2-bll/RegisterActions\";\r\n\r\nconst RegisterPage = () => {\r\n    const {success, error} = useSelector((store: AppStoreType) => store.register);\r\n    const [redirect, setRedirect] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (first) {\r\n            if (error || success) dispatch(RegisterActions.setError(\"\"));\r\n\r\n            setFirst(false);\r\n        } else {\r\n\r\n            if (success && !redirect) setTimeout(() => setRedirect(true), 500);\r\n        }\r\n    }, [first, success, error, dispatch, setFirst, redirect, setRedirect]);\r\n\r\n    DEV_VERSION && console.log(\"render RegisterPage\");\r\n    if (redirect && success && !first) return <Redirect to={PATH.LOGIN}/>;\r\n    return (\r\n        <div>\r\n            register\r\n            <RegisterStatus first={first}/>\r\n            <RegisterContainer/>\r\n            <LinkNya to={PATH.LOGIN} info={\"login in register\"}>login</LinkNya>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import {instance} from \"../../../../cnf-1-main/m-3-dal/instance\";\r\nimport {UserType} from \"../p-2-bll/ProfileInitState\";\r\n\r\nexport type GetMeDataType = UserType & { error: string; };\r\nexport type logOutDataType = { error: string; };\r\nexport type UpdateUserDataType = {\r\n    updatedUser: UserType;\r\n    error: string;\r\n};\r\n\r\nexport const ProfileAPI = {\r\n    getMe: async () => {\r\n        const response = await instance.post<GetMeDataType>(\"/auth/me\");\r\n\r\n        return response.data;\r\n    },\r\n\r\n    updateUser: async (name: string, avatar: string) => {\r\n        const response = await instance.put<UpdateUserDataType>(\"/auth/me\", {name, avatar});\r\n\r\n        return response.data;\r\n    },\r\n    logOut: async () => {\r\n        const response = await instance.delete<logOutDataType>(\"/auth/me\");\r\n\r\n        return response.data;\r\n    },\r\n\r\n\r\n    getUsers: async () => {\r\n        const response = await instance.get<any>(\"/social/users\");\r\n\r\n        return response.data;\r\n    },\r\n    sendGeneralChatMessage: async () => {\r\n        const response = await instance.post<any>(\"/social/general/message\",\r\n            {message: \"some message\"});\r\n\r\n        return response.data;\r\n    },\r\n    getGeneralChatMessages: async () => {\r\n        const response = await instance.get<any>(\"/social/general/message\");\r\n\r\n        return response.data;\r\n    },\r\n};\r\n","import React from \"react\";\r\nimport Status from \"../../../../cnf-0-common/c-1-ui/status/Status\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\ntype ProfileStatusPropsType = {\r\n    first: boolean;\r\n}\r\n\r\nconst ProfileStatus: React.FC<ProfileStatusPropsType> = React.memo(({first}) => {\r\n    const {loading, success, error} = useSelector((store: AppStoreType) => store.profile);\r\n\r\n    DEV_VERSION && console.log(\"render ProfileStatus\");\r\n    return <Status loading={loading} success={success} error={error} info={\"profile\"} first={first}/>\r\n});\r\n\r\nexport default ProfileStatus;\r\n","import React, {DetailedHTMLProps, HTMLAttributes, FocusEvent, useCallback, useState} from \"react\";\r\nimport s from \"./EditableSpanNya.module.css\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\nimport InputNya, {InputNyaPropsType} from \"../input/InputNya\";\r\n\r\nexport type SpanNyaPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\nexport type EditableSpanNyaPropsType = InputNyaPropsType & {\r\n    spanProps?: SpanNyaPropsType;\r\n};\r\n\r\nconst EditableSpanNya: React.FC<EditableSpanNyaPropsType> = React.memo((\r\n    {\r\n        onBlur, autoFocus,\r\n        spanProps,\r\n\r\n        info,\r\n        ...props\r\n    }\r\n) => {\r\n    const {onDoubleClick, children, ...restSpanProps} = spanProps || {\r\n        onDoubleClick: undefined,\r\n        children: undefined,\r\n    };\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n\r\n    const offEditMode = useCallback((e: FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false);\r\n        onBlur && onBlur(e);\r\n    }, [setEditMode, onBlur]);\r\n    const onEditMode = useCallback((e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true);\r\n        onDoubleClick && onDoubleClick(e);\r\n    }, [setEditMode, onDoubleClick]);\r\n\r\n    DEV_VERSION && info && console.log(\"render EditableSpanNya-\" + info);\r\n    return (\r\n        <>\r\n            {editMode ? (\r\n                <InputNya\r\n                    onBlur={offEditMode}\r\n                    autoFocus={!(autoFocus === false)}\r\n\r\n                    info={\"EditableSpanNya-\" + info}\r\n                    className={s.inputNya}\r\n                    {...props}\r\n                />\r\n            ) : (\r\n                <span\r\n                    onDoubleClick={onEditMode}\r\n\r\n                    className={s.spanNya}\r\n                    {...restSpanProps}\r\n                >\r\n                    {props.value}\r\n                </span>\r\n            )}\r\n        </>\r\n    );\r\n});\r\n\r\nexport default EditableSpanNya;\r\n","import React from \"react\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport EditableSpanNya from \"../../../../cnf-0-common/c-1-ui/editableSpan/EditableSpanNya\";\r\nimport ButtonNya from \"../../../../cnf-0-common/c-1-ui/button/ButtonNya\";\r\n\r\ntype ProfilePropsType = {\r\n    loading: boolean;\r\n    avatar: string;\r\n    setAvatar: (avatar: string) => void;\r\n    name: string;\r\n    setName: (name: string) => void;\r\n    update: () => void;\r\n    logOutCallback: () => void;\r\n};\r\n\r\nconst Profile: React.FC<ProfilePropsType> = React.memo((\r\n    {loading, avatar, setAvatar, name, setName, update, logOutCallback}\r\n) => {\r\n\r\n    DEV_VERSION && console.log(\"render Profile\");\r\n    return (\r\n        <div>\r\n            <img src={avatar} alt={\"avatar\"} height={\"200px\"}/>\r\n            <div>\r\n                avatar url: <EditableSpanNya\r\n                value={avatar}\r\n                onChangeText={setAvatar}\r\n                onBlur={update}\r\n                info={\"avatar-url\"}\r\n            />\r\n            </div>\r\n            <div>\r\n                name: <EditableSpanNya value={name} onChangeText={setName} onBlur={update} info={\"name\"}/>\r\n            </div>\r\n            <ButtonNya onClick={logOutCallback} disabled={loading}>LogOut</ButtonNya>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Profile;\r\n","export type UserType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number;\r\n\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean;\r\n    rememberMe: boolean;\r\n};\r\n\r\nexport const FakeUser = {\r\n    _id: \"0\",\r\n    email: \"fake\",\r\n    name: \"fake\",\r\n    // avatar?: string;\r\n    publicCardPacksCount: 0,\r\n\r\n    created: new Date(),\r\n    updated: new Date(),\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false\r\n};\r\n\r\nexport type ProfileStateType = {\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n\r\n    user: UserType\r\n};\r\n\r\nexport const ProfileInitState: ProfileStateType = {\r\n    loading: false,\r\n    success: false,\r\n    error: \"\",\r\n\r\n    user: FakeUser,\r\n};\r\n","import React, {useCallback, useState} from \"react\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {updateUser} from \"../p-2-bll/thunks/updateUserThunk\";\r\nimport Profile from \"./Profile\";\r\nimport {logOut} from \"../p-2-bll/thunks/logOutThunk\";\r\n\r\nconst ProfileContainer = React.memo(() => {\r\n    const {user, loading} = useSelector((store: AppStoreType) => store.profile);\r\n    const [name, setName] = useState<string>(user.name);\r\n    const [avatar, setAvatar] = useState<string>(user.avatar || \"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const update = useCallback(() => {\r\n        if (loading) {\r\n            setName(user.name);\r\n            setAvatar(user.avatar || \"\");\r\n        }\r\n        else dispatch(updateUser(name, avatar));\r\n    }, [dispatch, name, avatar, loading, setName, setAvatar, user]);\r\n    const logOutCallback = useCallback(() => dispatch(logOut()), [dispatch]);\r\n\r\n    DEV_VERSION && console.log(\"render ProfileContainer\");\r\n    return (\r\n        <Profile\r\n            loading={loading}\r\n            avatar={avatar}\r\n            setAvatar={setAvatar}\r\n            name={name}\r\n            setName={setName}\r\n            update={update}\r\n            logOutCallback={logOutCallback}\r\n        />\r\n    );\r\n});\r\n\r\nexport default ProfileContainer;\r\n","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, ReturnVoid, tryCatch} from \"../../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../../config\";\r\nimport {ProfileActions, ProfileActionsType} from \"../ProfileActions\";\r\nimport {ProfileAPI} from \"../../p-3-dal/ProfileAPI\";\r\n\r\nexport const updateUser = (\r\n    name: string, avatar: string\r\n): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType> => async (\r\n    dispatch,\r\n    // getStore: GetAppStoreType\r\n) => {\r\n    dispatch(ProfileActions.setLoading(true));\r\n\r\n    await tryCatch(\r\n        async () => {\r\n\r\n            const data = await ProfileAPI.updateUser(name, avatar);\r\n\r\n            dispatch(ProfileActions.setUser(data.updatedUser));\r\n            dispatch(ProfileActions.setSuccess(true));\r\n\r\n            DEV_VERSION && console.log(\"Nya, updateUser Success!\", data);\r\n        },\r\n        (e) => dispatch(ProfileActions.setError(e)),\r\n        \"updateUser\",\r\n    );\r\n};\r\n","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, ReturnVoid, tryCatch} from \"../../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../../config\";\r\nimport {ProfileActions, ProfileActionsType} from \"../ProfileActions\";\r\nimport {ProfileAPI} from \"../../p-3-dal/ProfileAPI\";\r\nimport {FakeUser} from \"../ProfileInitState\";\r\n\r\nexport const logOut = (): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType> => async (\r\n    dispatch,\r\n    // getStore: GetAppStoreType\r\n) => {\r\n    dispatch(ProfileActions.setLoading(true));\r\n\r\n    await tryCatch(\r\n        async () => {\r\n\r\n            const data = await ProfileAPI.logOut();\r\n\r\n            dispatch(ProfileActions.setUser(FakeUser));\r\n            dispatch(ProfileActions.setSuccess(true));\r\n\r\n            DEV_VERSION && console.log(\"Nya, logOut Success!\", data);\r\n        },\r\n        (e) => dispatch(ProfileActions.setError(e)),\r\n        \"logOut\",\r\n    );\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport ButtonNya from \"../../../../cnf-0-common/c-1-ui/button/ButtonNya\";\r\nimport {getUsers} from \"../p-2-bll/thunks/getUsersThunk\";\r\nimport {sendGeneralChatMessage} from \"../p-2-bll/thunks/sendGeneralChatMessageThunk\";\r\nimport {getGeneralChatMessages} from \"../p-2-bll/thunks/getGeneralChatMessagesThunk\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileContainer from \"./ProfileContainer\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ProfileActions} from \"../p-2-bll/ProfileActions\";\r\nimport {instance} from \"../../../../cnf-1-main/m-3-dal/instance\";\r\n\r\nconst ProfilePage = () => {\r\n    const {success, error} = useSelector((store: AppStoreType) => store.profile);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (first) {\r\n            if (error || success) dispatch(ProfileActions.setError(\"\"));\r\n\r\n            setFirst(false);\r\n        } else {\r\n\r\n        }\r\n    }, [first, success, error, dispatch, setFirst]);\r\n\r\n    // const get = () => dispatch(getUsers());\r\n    const get = () => {\r\n        instance.put('cards/grade', {})\r\n    }\r\n    const send = () => dispatch(sendGeneralChatMessage());\r\n    const getMessages = () => dispatch(getGeneralChatMessages());\r\n\r\n    DEV_VERSION && console.log(\"render ProfilePage\");\r\n    return (\r\n        <div>\r\n            ProfilePage\r\n            <ProfileStatus first={first}/>\r\n            <ProfileContainer/>\r\n\r\n            {/*<div>*/}\r\n                <ButtonNya onClick={get}>get users</ButtonNya>\r\n            {/*    <ButtonNya onClick={send}>send message</ButtonNya>*/}\r\n            {/*    <ButtonNya onClick={getMessages}>get messages</ButtonNya>*/}\r\n            {/*</div>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React, {DetailedHTMLProps, HTMLAttributes, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStoreType} from \"../../../cnf-1-main/m-2-bll/store\";\r\nimport {PATH} from \"../../../cnf-1-main/m-1-ui/main/routes/Pages\";\r\nimport {ProfileActions} from \"../../../cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/ProfileActions\";\r\nimport {getMe} from \"../../../cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/thunks/getMeThunk\";\r\n\r\ntype DivPropsType = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\r\n\r\ntype AuthRedirectPagePropsType = DivPropsType & {}\r\n\r\nconst AuthRedirectPage: React.FC<AuthRedirectPagePropsType> = React.memo((\r\n    {\r\n        children,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const {user, error, success} = useSelector((store: AppStoreType) => store.profile);\r\n    const [firstRendering, setFirstRendering] = useState<boolean>(true);\r\n    const [redirect, setRedirect] = useState<boolean>(false);\r\n    const [spin, setSpin] = useState<boolean>(user._id === \"0\"); // !!! add request /auth/me\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (firstRendering) {\r\n            if (success || error) dispatch(ProfileActions.setError(\"\"));\r\n\r\n            if (user._id === \"0\") {\r\n                dispatch(getMe());\r\n            }\r\n            setFirstRendering(false); // + rerender\r\n        } else {\r\n            if (!redirect && ((spin && error) || (!spin && user._id === \"0\"))) {\r\n                setTimeout(() => setRedirect(true), 1500);\r\n            }\r\n            if (success && spin) setSpin(false);\r\n        }\r\n    }, [firstRendering, setFirstRendering, user._id, setRedirect, success, error,\r\n        dispatch, redirect, spin, setSpin]);\r\n\r\n    if (redirect) return <Redirect to={PATH.LOGIN}/>;\r\n    if (spin) return <div>spin... {error}</div>;\r\n\r\n    return (\r\n        <>\r\n            {/*<Log s={renderLog || \"rendering AuthRedirectPage\"}/>*/}\r\n            <div {...restProps}>\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default AuthRedirectPage;\r\n","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, ReturnVoid, tryCatch} from \"../../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../../config\";\r\nimport {ProfileActions, ProfileActionsType} from \"../ProfileActions\";\r\nimport {ProfileAPI} from \"../../p-3-dal/ProfileAPI\";\r\n\r\nexport const getMe = (): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType> => async (\r\n    dispatch,\r\n    // getStore: GetAppStoreType\r\n) => {\r\n    dispatch(ProfileActions.setLoading(true));\r\n\r\n    await tryCatch(\r\n        async () => {\r\n\r\n            const data = await ProfileAPI.getMe();\r\n\r\n            dispatch(ProfileActions.setUser(data));\r\n            dispatch(ProfileActions.setSuccess(true));\r\n\r\n            DEV_VERSION && console.log(\"Nya, getMe Success!\", data);\r\n        },\r\n        (e) => dispatch(ProfileActions.setError(e)),\r\n        \"getMe\",\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport Status from \"../../../../cnf-0-common/c-1-ui/status/Status\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\ntype ForgotStatusPropsType = {\r\n    first: boolean;\r\n}\r\n\r\nconst ForgotStatus: React.FC<ForgotStatusPropsType> = React.memo(({first}) => {\r\n    const {loading, success, error} = useSelector((store: AppStoreType) => store.forgot);\r\n\r\n    DEV_VERSION && console.log(\"render ForgotStatus\");\r\n    return <Status loading={loading} success={success} error={error} info={\"forgot\"} first={first}/>\r\n});\r\n\r\nexport default ForgotStatus;\r\n","import React from \"react\";\r\nimport InputNya from \"../../../../cnf-0-common/c-1-ui/input/InputNya\";\r\nimport ButtonNya from \"../../../../cnf-0-common/c-1-ui/button/ButtonNya\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\ntype ForgotPropsType = {\r\n    email: string;\r\n    setEmail: (email: string) => void;\r\n\r\n    forgot: () => void;\r\n    loading: boolean\r\n};\r\n\r\nconst Forgot: React.FC<ForgotPropsType> = React.memo(({email, setEmail, forgot, loading}) => {\r\n\r\n    DEV_VERSION && console.log(\"render Forgot\");\r\n    return (\r\n        <>\r\n            <div><InputNya info={\"email\"} value={email} onChangeText={setEmail}/></div>\r\n            <div><ButtonNya info={\"forgot-send\"} onClick={forgot} disabled={loading}>send</ButtonNya></div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Forgot;\r\n","import {InferActionsType} from \"../../../../cnf-1-main/m-2-bll/actions\";\r\n\r\nexport type ForgotActionsType = InferActionsType<typeof ForgotActions>;\r\n\r\nexport const ForgotActions = {\r\n    setLoading: (loading: boolean) => ({\r\n        type: \"forgot/SET_LOADING\",\r\n        loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: \"forgot/SET_SUCCESS\",\r\n        success,\r\n    } as const),\r\n    setError: (error: string) => ({\r\n        type: \"forgot/SET_ERROR\",\r\n        error,\r\n    } as const),\r\n\r\n};\r\n","import {instance} from \"../../../../cnf-1-main/m-3-dal/instance\";\r\n\r\nexport type ForgotDataType = {\r\n    error: string;\r\n}\r\n\r\nexport const ForgotAPI = {\r\n    forgot: async (email: string) => {\r\n        const response = await instance.post<ForgotDataType>(\"/auth/forgot\", {\r\n            email,\r\n            from: \"test-front-admin <ai73a@yandex.by>\",\r\n            message: `\r\n<div style=\"background-color: lime; padding: 15px\">\r\npassword recovery link: \r\n<a href='http://localhost:3000/#/set-new-password/$token$'>link</a>\r\n</div>\r\n`\r\n        });\r\n\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import React, {useCallback, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport Forgot from \"./Forgot\";\r\nimport {forgot} from \"../f-2-bll/forgotThunk\";\r\n\r\nconst ForgotContainer = React.memo(() => {\r\n    const [email, setEmail] = useState<string>(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const forgotCallback = useCallback(\r\n        () => dispatch(forgot(email)),\r\n        [email, dispatch]\r\n    );\r\n    const {loading} = useSelector((store: AppStoreType) => store.forgot);\r\n\r\n    DEV_VERSION && console.log(\"render ForgotContainer\");\r\n    return (\r\n        <Forgot\r\n            email={email} setEmail={setEmail}\r\n            forgot={forgotCallback}\r\n            loading={loading}\r\n        />\r\n    );\r\n});\r\n\r\nexport default ForgotContainer;\r\n","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {ForgotActions, ForgotActionsType} from \"./ForgotActions\";\r\nimport {ForgotAPI} from \"../f-3-dal/ForgotAPI\";\r\n\r\nexport const forgot = (\r\n    email: string\r\n): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ForgotActionsType> => async (\r\n    dispatch,\r\n    // getStore: GetAppStoreType\r\n) => {\r\n    dispatch(ForgotActions.setLoading(true));\r\n\r\n    await tryCatch(\r\n        async () => {\r\n\r\n            const data = await ForgotAPI.forgot(email);\r\n\r\n            dispatch(ForgotActions.setSuccess(true));\r\n\r\n            DEV_VERSION && console.log(\"Nya, Forgot Success!\", data);\r\n\r\n        },\r\n        (e) => dispatch(ForgotActions.setError(e)),\r\n        \"Forgot\",\r\n    );\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {PATH} from \"../../../../cnf-1-main/m-1-ui/main/routes/Pages\";\r\nimport LinkNya from \"../../../../cnf-0-common/c-1-ui/link/LinkNya\";\r\nimport ForgotStatus from \"./ForgotStatus\";\r\nimport ForgotContainer from \"./ForgotContainer\";\r\nimport {ForgotActions} from \"../f-2-bll/ForgotActions\";\r\n\r\nconst ForgotPage = () => {\r\n    const {success, error} = useSelector((store: AppStoreType) => store.forgot);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (first) {\r\n            if (success || error) dispatch(ForgotActions.setError(\"\"));\r\n\r\n            setFirst(false);\r\n        } else {\r\n\r\n        }\r\n    }, [first, success, error, dispatch, setFirst]);\r\n\r\n    DEV_VERSION && console.log(\"render ForgotPage\");\r\n    return (\r\n        <div>\r\n            forgot\r\n            <ForgotStatus first={first}/>\r\n\r\n            {success\r\n                ? <div>click the link in the message in your email</div>\r\n                : <ForgotContainer/>\r\n            }\r\n\r\n            <div><LinkNya to={PATH.LOGIN} info={\"login in forgot\"}>login</LinkNya></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPage;\r\n","import React from \"react\";\r\nimport Status from \"../../../../cnf-0-common/c-1-ui/status/Status\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\ntype SetPassStatusPropsType = {\r\n    first: boolean;\r\n}\r\n\r\nconst SetPassStatus: React.FC<SetPassStatusPropsType> = React.memo(({first}) => {\r\n    const {loading, success, error} = useSelector((store: AppStoreType) => store.setPass);\r\n\r\n    DEV_VERSION && console.log(\"render SetPassStatus\");\r\n    return <Status loading={loading} success={success} error={error} info={\"setPass\"} first={first}/>\r\n});\r\n\r\nexport default SetPassStatus;\r\n","import React from \"react\";\r\nimport InputNya from \"../../../../cnf-0-common/c-1-ui/input/InputNya\";\r\nimport ButtonNya from \"../../../../cnf-0-common/c-1-ui/button/ButtonNya\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\ntype SetPassPropsType = {\r\n    pass: string;\r\n    setPass: (pass: string) => void;\r\n    pass2: string;\r\n    setPass2: (pass2: string) => void;\r\n\r\n    setPassCallback: () => void;\r\n    loading: boolean\r\n};\r\n\r\nconst SetPass: React.FC<SetPassPropsType> = React.memo((\r\n    {pass, setPass, pass2, setPass2, setPassCallback, loading}\r\n) => {\r\n\r\n    DEV_VERSION && console.log(\"render SetPass\");\r\n    return (\r\n        <>\r\n            <div><InputNya info={\"pass\"} value={pass} onChangeText={setPass}/></div>\r\n            <div><InputNya info={\"pass confirm\"} value={pass2} onChangeText={setPass2}/></div>\r\n            <div><ButtonNya info={\"sign up\"} onClick={setPassCallback} disabled={loading}>setPass</ButtonNya></div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default SetPass;\r\n","import {InferActionsType} from \"../../../../cnf-1-main/m-2-bll/actions\";\r\n\r\nexport type SetPassActionsType = InferActionsType<typeof SetPassActions>;\r\n\r\nexport const SetPassActions = {\r\n    setLoading: (loading: boolean) => ({\r\n        type: \"setPass/SET_LOADING\",\r\n        loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: \"setPass/SET_SUCCESS\",\r\n        success,\r\n    } as const),\r\n    setError: (error: string) => ({\r\n        type: \"setPass/SET_ERROR\",\r\n        error,\r\n    } as const),\r\n\r\n};\r\n","import {instance} from \"../../../../cnf-1-main/m-3-dal/instance\";\r\n\r\nexport type RegisterDataType = {\r\n    error: string;\r\n}\r\n\r\nexport const SetPassAPI = {\r\n    setPass: async (resetPasswordToken: string, password: string) => {\r\n        const response = await instance.post<RegisterDataType>(\r\n            \"/auth/set-new-password\",\r\n            {resetPasswordToken, password}\r\n            );\r\n\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import React, {useCallback, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport SetPass from \"./SetPass\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {setPassword} from \"../s-2-bll/setPassThunk\";\r\n\r\nconst SetPassContainer = React.memo(() => {\r\n    const [pass, setPass] = useState<string>(\"\");\r\n    const [pass2, setPass2] = useState<string>(\"\");\r\n    const {token} = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n    const setPassCallback = useCallback(\r\n        () => dispatch(setPassword(token, pass, pass2)),\r\n        [pass, pass2, dispatch]\r\n    );\r\n    const {loading} = useSelector((store: AppStoreType) => store.setPass);\r\n\r\n    DEV_VERSION && console.log(\"render SetPassContainer\");\r\n    return (\r\n        <SetPass\r\n            pass={pass} setPass={setPass}\r\n            pass2={pass2} setPass2={setPass2}\r\n            setPassCallback={setPassCallback}\r\n            loading={loading}\r\n        />\r\n    );\r\n});\r\n\r\nexport default SetPassContainer;\r\n","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {SetPassActions, SetPassActionsType} from \"./SetPassActions\";\r\nimport {SetPassAPI} from \"../s-3-dal/SetPassAPI\";\r\n\r\nexport const setPassword = (\r\n    token: string, password: string, pass2: string\r\n): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, SetPassActionsType> => async (\r\n    dispatch,\r\n    // getStore: GetAppStoreType\r\n) => {\r\n    dispatch(SetPassActions.setLoading(true));\r\n\r\n    await tryCatch(\r\n        async () => {\r\n            if (password !== pass2) dispatch(SetPassActions.setError(\"Passwords don't match!\"));\r\n            else {\r\n\r\n                const data = await SetPassAPI.setPass(token, password);\r\n\r\n                dispatch(SetPassActions.setSuccess(true));\r\n\r\n                DEV_VERSION && console.log(\"Nya, SetPass Success!\", data);\r\n            }\r\n        },\r\n        (e) => dispatch(SetPassActions.setError(e)),\r\n        \"SetPass\",\r\n    );\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport LinkNya from \"../../../../cnf-0-common/c-1-ui/link/LinkNya\";\r\nimport {PATH} from \"../../../../cnf-1-main/m-1-ui/main/routes/Pages\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport SetPassStatus from \"./SetPassStatus\";\r\nimport SetPassContainer from \"./SetPassContainer\";\r\nimport {SetPassActions} from \"../s-2-bll/SetPassActions\";\r\n\r\nconst SetPassPage = () => {\r\n    const {success, error} = useSelector((store: AppStoreType) => store.setPass);\r\n    const [redirect, setRedirect] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (first) {\r\n            if (error || success) dispatch(SetPassActions.setError(\"\"));\r\n\r\n            setFirst(false);\r\n        } else {\r\n\r\n            if (success && !redirect) setTimeout(() => setRedirect(true), 500);\r\n        }\r\n    }, [first, success, error, dispatch, setFirst, redirect, setRedirect]);\r\n\r\n    DEV_VERSION && console.log(\"render SetPassPage\");\r\n    if (redirect && success && !first) return <Redirect to={PATH.LOGIN}/>;\r\n    return (\r\n        <div>\r\n            setPass\r\n            <SetPassStatus first={first}/>\r\n            <SetPassContainer/>\r\n            <LinkNya to={PATH.LOGIN} info={\"login in setPass\"}>login</LinkNya>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SetPassPage;\r\n","import {instance} from \"../../../../cnf-1-main/m-3-dal/instance\";\r\nimport {PackType} from \"../p-2-bll/PacksInitState\";\r\n\r\nexport type GetDataType = {\r\n    cardPacks: PackType[];\r\n\r\n    error: string;\r\n}\r\n\r\nexport const PacksAPI = {\r\n    getPacks: async (packUser_id: string) => {\r\n        const response = await instance.get<GetDataType>(\r\n            `/cards/pack?`\r\n            + `pageCount=1000`\r\n            + `&page=1`\r\n            + (packUser_id && `&user_id=${packUser_id}`)\r\n            // + `&packName=o`\r\n            // + `&min=2`\r\n            // + `&max=2`\r\n            + `&sortPacks=0updated`\r\n        );\r\n\r\n        return response.data;\r\n    },\r\n    addPack: async () => {\r\n        const response = await instance.post<any>(\"/cards/pack\", {\r\n            cardsPack: {\r\n                name: \"new pack 2.0\",\r\n            }\r\n        });\r\n\r\n        return response.data;\r\n    },\r\n    updatePack: async (id: string) => {\r\n        const response = await instance.put<any>(\"/cards/pack\", {\r\n            cardsPack: {\r\n                _id: id,\r\n                name: \"update new pack 2.0\",\r\n                deckCover: \"\",\r\n            }\r\n        });\r\n\r\n        return response.data;\r\n    },\r\n    deletePack: async (id: string) => {\r\n        const response = await instance.delete<any>(`/cards/pack?id=${id}`);\r\n\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import {InferActionsType} from \"../../../../cnf-1-main/m-2-bll/actions\";\r\nimport {PackType} from \"./PacksInitState\";\r\n\r\nexport type PacksActionsType = InferActionsType<typeof PacksActions>;\r\n\r\nexport const PacksActions = {\r\n    setLoading: (loading: boolean) => ({\r\n        type: \"packs/SET_LOADING\",\r\n        loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: \"packs/SET_SUCCESS\",\r\n        success,\r\n    } as const),\r\n    setError: (error: string) => ({\r\n        type: \"packs/SET_ERROR\",\r\n        error,\r\n    } as const),\r\n\r\n    setPacks: (packs: PackType[]) => ({\r\n        type: \"packs/SET_PACKS\",\r\n        packs,\r\n    } as const),\r\n    setPackUser_id: (packUser_id: string) => ({\r\n        type: \"packs/SET_PACK_USER_ID\",\r\n        packUser_id,\r\n    } as const),\r\n\r\n};\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, GetAppStoreType, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {PacksAPI} from \"../p-3-dal/PacksAPI\";\r\nimport {ProfileActionsType} from \"../../../f-1-auth/a-7-profile/p-2-bll/ProfileActions\";\r\nimport {PacksActions, PacksActionsType} from \"./PacksActions\";\r\n\r\nexport const getPacks = (\r\n    //\r\n): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType | PacksActionsType> => async (\r\n    dispatch,\r\n    getStore: GetAppStoreType\r\n) => {\r\n    // dispatch(RegisterActions.setLoading(true));\r\n\r\n    const {packUser_id} = getStore().packs;\r\n\r\n    await tryCatch(\r\n        async () => {\r\n\r\n            const data = await PacksAPI.getPacks(packUser_id);\r\n\r\n            // signInSuccess(dispatch, true);\r\n            dispatch(PacksActions.setPacks(data.cardPacks));\r\n\r\n            DEV_VERSION && console.log(\"Nya, getPacks Success!\", data);\r\n\r\n        },\r\n        (e) => {\r\n            // dispatch(RegisterActions.setError(e))\r\n        },\r\n        \"getPacks\"\r\n    );\r\n};\r\n","import React, {CSSProperties, ReactNode} from 'react';\r\n\r\nexport type TableNyaModelType = {\r\n    title: (index: number, loading: boolean) => ReactNode;\r\n    render: (dataItem: any, modelIndex: number, dataIndex: number, loading: boolean) => ReactNode;\r\n}\r\n\r\nexport type TableNyaPropsType = {\r\n    loading?: boolean; title?: string; model: TableNyaModelType[]; data: any;\r\n\r\n    headerStyle?: CSSProperties, tableStyle?: CSSProperties, rowsStyle?: CSSProperties, rowStyle?: CSSProperties,\r\n}\r\n\r\nconst TableNya: React.FC<TableNyaPropsType> = (\r\n    {\r\n        loading = false, title = 'table', model, data,\r\n\r\n        headerStyle, tableStyle,\r\n        rowsStyle, rowStyle,\r\n    }\r\n) => {\r\n\r\n    return (\r\n        <div style={{margin: \"0 10px\", ...tableStyle}}>\r\n            {title}\r\n\r\n            <div style={{border: \"1px solid red\", width: \"100%\", display: \"flex\", ...headerStyle}}>\r\n                {model.map((m, index) => m.title(index, loading))}\r\n            </div>\r\n\r\n            <div style={{border: \"1px solid lime\", width: \"100%\", ...rowsStyle}}>\r\n                {data.map((dataItem: any, dataIndex: number) => (\r\n                    <div\r\n                        key={title + \"-row-\" + (dataItem._id || dataIndex)}\r\n                        style={{width: \"100%\", display: \"flex\", ...rowStyle}}\r\n                    >\r\n                        {model.map((m, modelIndex) =>\r\n                            m.render(dataItem, modelIndex, dataIndex, loading))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableNya;\r\n","import React, {ChangeEvent, useCallback, useEffect, useState} from \"react\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {getPacks} from \"../p-2-bll/getPacksThunk\";\r\nimport TableNya from \"../../../../cnf-0-common/c-1-ui/table/TableNya\";\r\nimport {packsModel} from \"./PacksModel\";\r\nimport {addPack} from \"../p-2-bll/addPackThunk\";\r\nimport {deletePack} from \"../p-2-bll/deletePackThunk\";\r\nimport {updatePack} from \"../p-2-bll/updatePackThunk\";\r\nimport {PacksActions} from \"../p-2-bll/PacksActions\";\r\n\r\nconst PacksContainer = React.memo(() => {\r\n    const {packs, packUser_id} = useSelector((store: AppStoreType) => store.packs);\r\n    const {_id} = useSelector((store: AppStoreType) => store.profile.user);\r\n    const [myPacks, setMyPacks] = useState<boolean>(!!packUser_id);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getPacks());\r\n\r\n    }, [dispatch]);\r\n\r\n    const setMyPacksCallback = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(PacksActions.setPackUser_id(myPacks ? \"\" : _id));\r\n        dispatch(getPacks());\r\n        setMyPacks(e.target.checked);\r\n    }, [setMyPacks, dispatch, myPacks, _id]);\r\n\r\n    const model = packsModel(\r\n        () => dispatch(addPack()),\r\n        (id: string) => dispatch(deletePack(id)),\r\n        (id: string) => dispatch(updatePack(id)),\r\n    );\r\n\r\n    DEV_VERSION && console.log(\"render PacksContainer\");\r\n    return (\r\n        <div>\r\n            <label>\r\n                <input\r\n                    type={\"checkbox\"}\r\n                    checked={myPacks}\r\n                    onChange={setMyPacksCallback}\r\n                />\r\n                my packs\r\n            </label>\r\n            <TableNya model={model} data={packs} title={\"CardPacks\"}/>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default PacksContainer;\r\n","import React from \"react\";\r\nimport {TableNyaModelType} from \"../../../../cnf-0-common/c-1-ui/table/TableNya\";\r\nimport {PackType} from \"../p-2-bll/PacksInitState\";\r\nimport ButtonNya from \"../../../../cnf-0-common/c-1-ui/button/ButtonNya\";\r\nimport LinkNya from \"../../../../cnf-0-common/c-1-ui/link/LinkNya\";\r\nimport {PATH} from \"../../../../cnf-1-main/m-1-ui/main/routes/Pages\";\r\n\r\nexport const packsModel = (\r\n    add: () => void,\r\n    del: (id: string) => void,\r\n    update: (id: string) => void,\r\n): TableNyaModelType[] => [\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={\"name-title-\" + index} style={{width: 150}}>Name</div>\r\n        ),\r\n        render: (dataItem: PackType, modelIndex, dataIndex, loading) => (\r\n            <div key={\"name-cell-\" + dataItem._id} style={{width: 150}}>\r\n                {dataItem.name}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={\"cardsCount-title-\" + index} style={{width: 150}}>cardsCount</div>\r\n        ),\r\n        render: (dataItem: PackType, modelIndex, dataIndex, loading) => (\r\n            <div key={\"cardsCount-cell-\" + dataItem._id} style={{width: 150}}>\r\n                {dataItem.cardsCount}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={\"updated-title-\" + index} style={{width: 150}}>updated</div>\r\n        ),\r\n        render: (dataItem: PackType, modelIndex, dataIndex, loading) => (\r\n            <div key={\"updated-cell-\" + dataItem._id} style={{width: 150}}>\r\n                {dataItem.updated.slice(5, 16)}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={\"url-title-\" + index} style={{width: 150}}>url</div>\r\n        ),\r\n        render: (dataItem: PackType, modelIndex, dataIndex, loading) => (\r\n            <div key={\"url-cell-\" + dataItem._id} style={{width: 150}}>\r\n                {dataItem.deckCover}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={\"buttons-title-\" + index} style={{width: 150}}>\r\n                <ButtonNya onClick={add}>add</ButtonNya>\r\n            </div>\r\n        ),\r\n        render: (dataItem: PackType, modelIndex, dataIndex, loading) => (\r\n            <div key={\"buttons-cell-\" + dataItem._id} style={{width: 250}}>\r\n                <ButtonNya onClick={() => del(dataItem._id)}>del</ButtonNya>\r\n                <ButtonNya onClick={() => update(dataItem._id)}>update</ButtonNya>\r\n                <LinkNya to={PATH.CARDS + \"/\" + dataItem._id}>cards</LinkNya>\r\n                {/*<LinkNya to={PATH.LEARN + '/' + dataItem._id}>learn</LinkNya>*/}\r\n            </div>\r\n        )\r\n    },\r\n\r\n];\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {PacksAPI} from \"../p-3-dal/PacksAPI\";\r\nimport {ProfileActionsType} from \"../../../f-1-auth/a-7-profile/p-2-bll/ProfileActions\";\r\nimport {getPacks} from \"./getPacksThunk\";\r\n\r\nexport const addPack = (\r\n    //\r\n): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType> => async (\r\n    dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, ProfileActionsType>,\r\n    // getStore: GetAppStoreType\r\n) => {\r\n    // dispatch(RegisterActions.setLoading(true));\r\n\r\n    await tryCatch(\r\n        async () => {\r\n\r\n            const data = await PacksAPI.addPack();\r\n\r\n            // dispatch(RegisterActions.setSuccess(true));\r\n            dispatch(getPacks());\r\n\r\n            DEV_VERSION && console.log(\"Nya, addPack Success!\", data);\r\n        },\r\n        (e) => {\r\n            // dispatch(RegisterActions.setError(e))\r\n        },\r\n        \"addPack\"\r\n    );\r\n};\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {PacksAPI} from \"../p-3-dal/PacksAPI\";\r\nimport {ProfileActionsType} from \"../../../f-1-auth/a-7-profile/p-2-bll/ProfileActions\";\r\nimport {getPacks} from \"./getPacksThunk\";\r\n\r\nexport const deletePack = (\r\n    id: string\r\n): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType> => async (\r\n    dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, ProfileActionsType>,\r\n    // getStore: GetAppStoreType\r\n) => {\r\n    // dispatch(RegisterActions.setLoading(true));\r\n\r\n    await tryCatch(\r\n        async () => {\r\n\r\n            const data = await PacksAPI.deletePack(id);\r\n\r\n            // dispatch(RegisterActions.setSuccess(true));\r\n            dispatch(getPacks());\r\n\r\n            DEV_VERSION && console.log(\"Nya, deletePack Success!\", data);\r\n\r\n\r\n        },\r\n        (e) => {\r\n            // dispatch(RegisterActions.setError(e))\r\n        },\r\n        \"deletePack\"\r\n    );\r\n};\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {PacksAPI} from \"../p-3-dal/PacksAPI\";\r\nimport {ProfileActionsType} from \"../../../f-1-auth/a-7-profile/p-2-bll/ProfileActions\";\r\nimport {getPacks} from \"./getPacksThunk\";\r\n\r\nexport const updatePack = (\r\n    id: string\r\n): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType> => async (\r\n    dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, ProfileActionsType>,\r\n    // getStore: GetAppStoreType\r\n) => {\r\n    // dispatch(RegisterActions.setLoading(true));\r\n\r\n    await tryCatch(\r\n        async () => {\r\n\r\n            const data = await PacksAPI.updatePack(id);\r\n            // dispatch(RegisterActions.setSuccess(true));\r\n            dispatch(getPacks());\r\n\r\n            DEV_VERSION && console.log(\"Nya, updatePack Success!\", data);\r\n        },\r\n        (e) => {\r\n            // dispatch(RegisterActions.setError(e))\r\n        },\r\n        \"updatePack\"\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport PacksContainer from \"./PacksContainer\";\r\n\r\nconst PacksPage = () => {\r\n\r\n    DEV_VERSION && console.log(\"render PacksPage\");\r\n    return (\r\n        <div>\r\n            PacksPage\r\n\r\n            <PacksContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PacksPage;\r\n","import {instance} from \"../../../../cnf-1-main/m-3-dal/instance\";\r\nimport {CardType} from \"../c-2-bll/CardsInitState\";\r\n\r\nexport type GetDataType = {\r\n    cards: CardType[];\r\n\r\n    error: string;\r\n}\r\n\r\nexport const CardsAPI = {\r\n    getCards: async (cardsPack_id: string) => {\r\n        const response = await instance.get<GetDataType>(`/cards/card?cardsPack_id=${cardsPack_id}`\r\n        + \"&pageCount=1000\"\r\n        // + \"&cardQuestion=ne\"\r\n        // + \"&min=2\"\r\n        // + \"&max=3\"\r\n        );\r\n\r\n        return response.data;\r\n    },\r\n    addCard: async (cardsPack_id: string) => {\r\n        const response = await instance.post<any>(\"/cards/card\", {\r\n            card: {\r\n                cardsPack_id,\r\n                question: \"new 2.0!\",\r\n                grade: Math.random() * 5,\r\n                questionImg: \"some img\",\r\n            },\r\n        });\r\n\r\n        return response.data;\r\n    },\r\n    updateCard: async (id: string) => {\r\n        const response = await instance.put<any>(\"/cards/card\", {\r\n            card: {\r\n                _id: id,\r\n                question: \"updated question\",\r\n                answerImg: \"some answer img\",\r\n                comments: \"new com\",\r\n            }\r\n        });\r\n\r\n        return response.data;\r\n    },\r\n    deleteCard: async (id: string) => {\r\n        const response = await instance.delete<any>(`/cards/card?&id=${id}`);\r\n\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import {InferActionsType} from \"../../../../cnf-1-main/m-2-bll/actions\";\r\nimport {CardType} from \"./CardsInitState\";\r\n\r\nexport type CardsActionsType = InferActionsType<typeof CardsActions>;\r\n\r\nexport const CardsActions = {\r\n    setLoading: (loading: boolean) => ({\r\n        type: \"cards/SET_LOADING\",\r\n        loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: \"cards/SET_SUCCESS\",\r\n        success,\r\n    } as const),\r\n    setError: (error: string) => ({\r\n        type: \"cards/SET_ERROR\",\r\n        error,\r\n    } as const),\r\n\r\n    setCards: (cards: CardType[]) => ({\r\n        type: \"cards/SET_CARDS\",\r\n        cards,\r\n    } as const),\r\n\r\n};\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {ProfileActionsType} from \"../../../f-1-auth/a-7-profile/p-2-bll/ProfileActions\";\r\nimport {CardsAPI} from \"../c-3-dal/CardsAPI\";\r\nimport {CardsActions, CardsActionsType} from \"./CardsActions\";\r\n\r\nexport const getCards = (\r\n    id: string\r\n): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType | CardsActionsType> => async (\r\n    dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, ProfileActionsType | CardsActionsType>,\r\n    // getStore: GetAppStoreType\r\n) => {\r\n    // dispatch(RegisterActions.setLoading(true));\r\n\r\n    await tryCatch(\r\n        async () => {\r\n\r\n            const data = await CardsAPI.getCards(id);\r\n\r\n            // signInSuccess(dispatch, true);\r\n            dispatch(CardsActions.setCards(data.cards));\r\n\r\n            DEV_VERSION && console.log(\"Nya, getCards Success!\", data);\r\n        },\r\n        (e) => {\r\n            // dispatch(RegisterActions.setError(e))\r\n        },\r\n        \"getCards\"\r\n    );\r\n};\r\n","import React, {useEffect} from \"react\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport TableNya, {TableNyaModelType} from \"../../../../cnf-0-common/c-1-ui/table/TableNya\";\r\nimport {getCards} from \"../c-2-bll/getCardsThunk\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {cardsModel} from \"./CardsModel\";\r\nimport {addCard} from \"../c-2-bll/addCardThunk\";\r\nimport {deleteCard} from \"../c-2-bll/deleteCardThunk\";\r\nimport {updateCard} from \"../c-2-bll/updateCardThunk\";\r\n\r\nconst CardsContainer = React.memo(() => {\r\n    const {cards} = useSelector((store: AppStoreType) => store.cards);\r\n    const {id} = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n\r\n        dispatch(getCards(id));\r\n    }, [dispatch, id]);\r\n\r\n    const model: TableNyaModelType[] = cardsModel(\r\n        () => dispatch(addCard(id)),\r\n        (card_id: string) => dispatch(deleteCard(card_id, id)),\r\n        (card_id: string) => dispatch(updateCard(card_id, id)),\r\n    );\r\n\r\n    DEV_VERSION && console.log(\"render CardsContainer, id:\" + id);\r\n    return (\r\n        <div>\r\n            <TableNya model={model} data={cards} title={\"Cards\"}/>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default CardsContainer;\r\n","import React from \"react\";\r\nimport {TableNyaModelType} from \"../../../../cnf-0-common/c-1-ui/table/TableNya\";\r\nimport ButtonNya from \"../../../../cnf-0-common/c-1-ui/button/ButtonNya\";\r\nimport {CardType} from \"../c-2-bll/CardsInitState\";\r\nimport {PackType} from \"../../c-1-packs/p-2-bll/PacksInitState\";\r\n\r\nexport const cardsModel = (\r\n    add: () => void,\r\n    del: (id: string) => void,\r\n    update: (id: string) => void,\r\n): TableNyaModelType[] => [\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={\"question-title-\" + index} style={{width: 150}}>question</div>\r\n        ),\r\n        render: (dataItem: CardType, modelIndex, dataIndex, loading) => (\r\n            <div key={\"question-cell-\" + dataItem._id} style={{width: 150}}>\r\n                {dataItem.question}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={\"answer-title-\" + index} style={{width: 150}}>answer</div>\r\n        ),\r\n        render: (dataItem: CardType, modelIndex, dataIndex, loading) => (\r\n            <div key={\"answer-cell-\" + dataItem._id} style={{width: 150}}>\r\n                {dataItem.answer}\r\n            </div>\r\n        )\r\n    },\r\n\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={\"grade-title-\" + index} style={{width: 150}}>Grade</div>\r\n        ),\r\n        render: (dataItem: CardType, modelIndex, dataIndex, loading) => (\r\n            <div key={\"grade-cell-\" + dataItem._id} style={{width: 150}}>\r\n                {dataItem.grade.toFixed(10)}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={\"updated-title-\" + index} style={{width: 150}}>updated</div>\r\n        ),\r\n        render: (dataItem: CardType, modelIndex, dataIndex, loading) => (\r\n            <div key={\"updated-cell-\" + dataItem._id} style={{width: 150}}>\r\n                {dataItem.updated.slice(5, 16)}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={\"url-title-\" + index} style={{width: 150}}>url</div>\r\n        ),\r\n        render: (dataItem: CardType, modelIndex, dataIndex, loading) => (\r\n            <div key={\"url-cell-\" + dataItem._id} style={{width: 150}}>\r\n                {dataItem.answerImg}\r\n                <div>{dataItem.answerVideo}</div>\r\n                <div>{dataItem.questionImg}</div>\r\n                <div>{dataItem.questionVideo}</div>\r\n                <pre>{dataItem.comments}</pre>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={\"buttons-title-\" + index} style={{width: 150}}>\r\n                <ButtonNya onClick={add}>add</ButtonNya>\r\n            </div>\r\n        ),\r\n        render: (dataItem: CardType, modelIndex, dataIndex, loading) => (\r\n            <div key={\"buttons-cell-\" + dataItem._id} style={{width: 250}}>\r\n                <ButtonNya onClick={() => del(dataItem._id)}>del</ButtonNya>\r\n                <ButtonNya onClick={() => update(dataItem._id)}>update</ButtonNya>\r\n            </div>\r\n        )\r\n    },\r\n    // {\r\n    //     title: (index, loading) => (\r\n    //         <div key={\"else-title-\" + index} style={{width: 150}}>else</div>\r\n    //     ),\r\n    //     render: (dataItem: CardType, modelIndex, dataIndex, loading) => (\r\n    //         <div key={\"else-cell-\" + dataItem._id} style={{width: 150}}>\r\n    //             {JSON.stringify(dataItem)}\r\n    //         </div>\r\n    //     )\r\n    // },\r\n];\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {ProfileActionsType} from \"../../../f-1-auth/a-7-profile/p-2-bll/ProfileActions\";\r\nimport {CardsAPI} from \"../c-3-dal/CardsAPI\";\r\nimport {getCards} from \"./getCardsThunk\";\r\n\r\nexport const addCard = (\r\n    id: string\r\n): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType> => async (\r\n    dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, ProfileActionsType>,\r\n    // getStore: GetAppStoreType\r\n) => {\r\n    // dispatch(RegisterActions.setLoading(true));\r\n\r\n    await tryCatch(\r\n        async () => {\r\n\r\n            const data = await CardsAPI.addCard(id);\r\n            // dispatch(RegisterActions.setSuccess(true));\r\n            dispatch(getCards(id));\r\n\r\n            DEV_VERSION && console.log(\"Nya, addCard Success!\", data);\r\n        },\r\n        (e) => {\r\n            // dispatch(RegisterActions.setError(e))\r\n        },\r\n        \"addCard\"\r\n    );\r\n};\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {ProfileActionsType} from \"../../../f-1-auth/a-7-profile/p-2-bll/ProfileActions\";\r\nimport {CardsAPI} from \"../c-3-dal/CardsAPI\";\r\nimport {getCards} from \"./getCardsThunk\";\r\n\r\nexport const deleteCard = (\r\n    id: string, pack_id: string\r\n): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType> => async (\r\n    dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, ProfileActionsType>,\r\n    // getStore: GetAppStoreType\r\n) => {\r\n    // dispatch(RegisterActions.setLoading(true));\r\n\r\n    await tryCatch(\r\n        async () => {\r\n\r\n            const data = await CardsAPI.deleteCard(id);\r\n            // dispatch(RegisterActions.setSuccess(true));\r\n            dispatch(getCards(pack_id));\r\n\r\n            DEV_VERSION && console.log(\"Nya, deleteCard Success!\", data);\r\n        },\r\n        (e) => {\r\n            // dispatch(RegisterActions.setError(e))\r\n        },\r\n        \"deleteCard\"\r\n    );\r\n};\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {ProfileActionsType} from \"../../../f-1-auth/a-7-profile/p-2-bll/ProfileActions\";\r\nimport {CardsAPI} from \"../c-3-dal/CardsAPI\";\r\nimport {getCards} from \"./getCardsThunk\";\r\n\r\nexport const updateCard = (\r\n    id: string, pack_id: string\r\n): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType> => async (\r\n    dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, ProfileActionsType>,\r\n    // getStore: GetAppStoreType\r\n) => {\r\n    // dispatch(RegisterActions.setLoading(true));\r\n\r\n    await tryCatch(\r\n        async () => {\r\n\r\n            const data = await CardsAPI.updateCard(id);\r\n            // dispatch(RegisterActions.setSuccess(true));\r\n            dispatch(getCards(pack_id));\r\n\r\n            DEV_VERSION && console.log(\"Nya, updateCard Success!\", data);\r\n        },\r\n        (e) => {\r\n            // dispatch(RegisterActions.setError(e))\r\n        },\r\n        \"updateCard\"\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport CardsContainer from \"./CardsContainer\";\r\n\r\nconst CardsPage = () => {\r\n\r\n    DEV_VERSION && console.log(\"render CardsPage\");\r\n    return (\r\n        <div>\r\n            PacksPage\r\n\r\n            <CardsContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardsPage;\r\n","import React, {ReactNode} from \"react\";\r\nimport LoginPage from \"../../../../cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/LoginPage\";\r\nimport RegisterPage from \"../../../../cnf-2-fatures/f-1-auth/a-2-register/r-1-ui/RegisterPage\";\r\nimport ProfilePage from \"../../../../cnf-2-fatures/f-1-auth/a-7-profile/p-1-ui/ProfilePage\";\r\nimport AuthRedirectPage from \"../../../../cnf-0-common/c-1-ui/redirect/AuthRedirectPage\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport ForgotPage from \"../../../../cnf-2-fatures/f-1-auth/a-3-forgot/f-1-ui/ForgotPage\";\r\nimport SetPassPage from \"../../../../cnf-2-fatures/f-1-auth/a-4-setPass/s-1-ui/SetPassPage\";\r\nimport PacksPage from \"../../../../cnf-2-fatures/f-2-cards/c-1-packs/p-1-ui/PacksPage\";\r\nimport CardsPage from \"../../../../cnf-2-fatures/f-2-cards/c-2-cards/c-1-ui/CardsPage\";\r\n// import LearnPage from \"../../../../cnf-2-fatures/f-3-learn/l-1-ui/LearnPage\";\r\n// import TestPage from \"../../../../cnf-2-fatures/f-4-file/f-1-ui/TestPage\";\r\n\r\nexport type PageType = {\r\n    _id: number;\r\n    title: string;\r\n    path?: string;\r\n    params?: string;\r\n    exact?: boolean;\r\n    page: ReactNode;\r\n};\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    REGISTER: \"/register\",\r\n    PROFILE: \"/profile\",\r\n    FORGOT: \"/forgot\",\r\n    SET_PASS: \"/set-new-password\",\r\n    PACKS: \"/packs\",\r\n    CARDS: \"/cards\",\r\n    // LEARN: '/learn',\r\n    // TEST: '/text',\r\n};\r\n\r\nexport const pages: PageType[] = [\r\n    {_id: 0, title: \"main\", path: \"/\", exact: true, page: <Redirect to={PATH.LOGIN}/>},\r\n    {_id: 1, title: \"login\", path: PATH.LOGIN, exact: true, page: <LoginPage/>},\r\n    {_id: 2, title: \"register\", path: PATH.REGISTER, exact: true, page: <RegisterPage/>},\r\n    {_id: 3, title: \"forgot\", path: PATH.FORGOT, exact: true, page: <ForgotPage/>},\r\n    {_id: 4, title: \"setPass\", path: PATH.SET_PASS, params: \"/:token\", exact: true, page: <SetPassPage/>},\r\n    // {\r\n    //     id: 7, title: 'profile', path: PATH.PROFILE, params: '/:id', exact: true,\r\n    //     page: (p) => <div>{p.match.params.id}</div>\r\n    // },\r\n    {\r\n        _id: 7, title: \"profile\", path: PATH.PROFILE, exact: true,\r\n        page: <AuthRedirectPage><ProfilePage/></AuthRedirectPage>\r\n    },\r\n    {\r\n        _id: 8, title: \"packs\", path: PATH.PACKS, exact: true,\r\n        page: <AuthRedirectPage><PacksPage/></AuthRedirectPage>\r\n    },\r\n    {\r\n        _id: 9, title: \"cards\", path: PATH.CARDS, params: \"/:id\", exact: true,\r\n        page: <AuthRedirectPage><CardsPage/></AuthRedirectPage>\r\n    },\r\n    // {id: 10, title: 'learn', path: PATH.LEARN, params: '/:id', exact: true, page: () => <LearnPage/>},\r\n    // {id: 11, title: 'test', path: PATH.TEST, exact: true, page: () => <TestPage/>},\r\n\r\n    {_id: 9999, title: \"error404\", page: <div>error404</div>}\r\n];\r\n","import React from \"react\";\r\nimport {pages} from \"../routes/Pages\";\r\nimport LinkNya from \"../../../../cnf-0-common/c-1-ui/link/LinkNya\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\nconst mappedLinks = pages.map(p => (\r\n    <LinkNya\r\n        key={\"navLink-\" + p._id}\r\n        to={(p.path || \"/error404\") + (p.params ? \"/1\" : \"\")}\r\n        info={\"navLink-\" + p._id}\r\n    >\r\n        {p.title}\r\n    </LinkNya>\r\n));\r\n\r\nconst DevHeader = () => {\r\n\r\n    DEV_VERSION && console.log(\"render DevHeader\");\r\n    return (\r\n        <>\r\n            {mappedLinks}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DevHeader;\r\n","import React from \"react\";\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport {PageType, pages} from \"./Pages\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\nconst mappedRoutes = pages.map((p: PageType) => (\r\n    <Route\r\n        key={\"route-\" + p._id}\r\n        path={p.path && (p.path + (p.params || \"\"))}\r\n        exact={p.exact}\r\n        render={() => p.page}\r\n    />\r\n));\r\n\r\nconst Routes = () => {\r\n\r\n    DEV_VERSION && console.log(\"render Routes\");\r\n    return (\r\n        <Switch>\r\n            {mappedRoutes}\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport DevHeader from \"./dev-header/DevHeader\";\r\nimport Routes from \"./routes/Routes\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\n// headers, routes, footers\r\nconst Main = () => {\r\n\r\n    DEV_VERSION && console.log(\"render Main\");\r\n    return (\r\n        <>\r\n            {DEV_VERSION && <DevHeader/>}\r\n\r\n            <Routes/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","export type LoginStateType = {\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n}\r\n\r\nexport const loginInitState: LoginStateType = {\r\n    loading: false,\r\n    success: false,\r\n    error: \"\",\r\n};\r\n","export type RegisterStateType = {\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n}\r\n\r\nexport const RegisterInitState: RegisterStateType = {\r\n    loading: false,\r\n    success: false,\r\n    error: \"\",\r\n};\r\n","export type ForgotStateType = {\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n}\r\n\r\nexport const ForgotInitState: ForgotStateType = {\r\n    loading: false,\r\n    success: false,\r\n    error: \"\",\r\n};\r\n","export type SetPassStateType = {\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n}\r\n\r\nexport const SetPassInitState: SetPassStateType = {\r\n    loading: false,\r\n    success: false,\r\n    error: \"\",\r\n};\r\n","export type PackType = {\r\n    _id: string;\r\n    user_id: string;\r\n    user_name: string;\r\n    private: boolean;\r\n\r\n    name: string;\r\n    path: string;\r\n    grade: number; // back count\r\n    shots: number; // back count\r\n\r\n    cardsCount: number; // back count\r\n    deckCover: string;\r\n\r\n    type: string;\r\n    rating: number; // hz\r\n    more_id: string;\r\n\r\n    created: string;\r\n    updated: string;\r\n}\r\n\r\nexport type PacksStateType = {\r\n    packs: PackType[];\r\n\r\n    packUser_id: string;\r\n}\r\n\r\nexport const PacksInitState: PacksStateType = {\r\n    packs: [],\r\n\r\n    packUser_id: \"\",\r\n};\r\n","export type CardType = {\r\n    _id: string;\r\n    cardsPack_id: string;\r\n    user_id: string;\r\n\r\n    answer: string;\r\n    question: string;\r\n    grade: number;\r\n    shots: number;\r\n\r\n    questionImg: string;\r\n    answerImg: string;\r\n    answerVideo: string;\r\n    questionVideo: string;\r\n\r\n    comments: string;\r\n\r\n    type: string;\r\n    rating: number;\r\n    more_id: string;\r\n\r\n    created: string;\r\n    updated: string;\r\n}\r\n\r\nexport type CardsStateType = {\r\n    cards: CardType[];\r\n}\r\n\r\nexport const CardsInitState: CardsStateType = {\r\n    cards: [],\r\n};\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {loginReducer} from \"../../cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/loginReducer\";\r\nimport {registerReducer} from \"../../cnf-2-fatures/f-1-auth/a-2-register/r-2-bll/registerReducer\";\r\nimport {DEV_VERSION} from \"../../config\";\r\nimport {profileReducer} from \"../../cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/profileReducer\";\r\nimport {forgotReducer} from \"../../cnf-2-fatures/f-1-auth/a-3-forgot/f-2-bll/forgotReducer\";\r\nimport {setPassReducer} from \"../../cnf-2-fatures/f-1-auth/a-4-setPass/s-2-bll/setPassReducer\";\r\nimport {packsReducer} from \"../../cnf-2-fatures/f-2-cards/c-1-packs/p-2-bll/packsReducer\";\r\nimport {cardsReducer} from \"../../cnf-2-fatures/f-2-cards/c-2-cards/c-2-bll/cardsReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    forgot: forgotReducer,\r\n    setPass: setPassReducer,\r\n\r\n    profile: profileReducer,\r\n\r\n    packs: packsReducer,\r\n    cards: cardsReducer,\r\n\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\nif (DEV_VERSION) {\r\n    // @ts-ignore\r\n    window.store = store; // for dev\r\n}\r\n","import {loginInitState, LoginStateType} from \"./LoginInitState\";\r\nimport {LoginActionsType} from \"./LoginActions\";\r\n\r\nexport const loginReducer = (state = loginInitState, action: LoginActionsType): LoginStateType => {\r\n    switch (action.type) {\r\n        case \"login/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"login/SET_LOADING\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: action.loading,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"login/SET_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: false,\r\n                success: action.success,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n","import {RegisterInitState, RegisterStateType} from \"./RegisterInitState\";\r\nimport {RegisterActionsType} from \"./RegisterActions\";\r\n\r\nexport const registerReducer =\r\n    (state = RegisterInitState, action: RegisterActionsType): RegisterStateType => {\r\n        switch (action.type) {\r\n            case \"register/SET_ERROR\": {\r\n                return {\r\n                    ...state,\r\n                    error: action.error,\r\n                    loading: false,\r\n                    success: false,\r\n                }\r\n            }\r\n            case \"register/SET_LOADING\": {\r\n                return {\r\n                    ...state,\r\n                    error: \"\",\r\n                    loading: action.loading,\r\n                    success: false,\r\n                }\r\n            }\r\n            case \"register/SET_SUCCESS\": {\r\n                return {\r\n                    ...state,\r\n                    error: \"\",\r\n                    loading: false,\r\n                    success: action.success,\r\n                }\r\n            }\r\n\r\n            default: {\r\n                return state\r\n            }\r\n        }\r\n    };\r\n","import {ForgotInitState, ForgotStateType} from \"./ForgotInitState\";\r\nimport {ForgotActionsType} from \"./ForgotActions\";\r\n\r\nexport const forgotReducer = (state = ForgotInitState, action: ForgotActionsType): ForgotStateType => {\r\n    switch (action.type) {\r\n        case \"forgot/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"forgot/SET_LOADING\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: action.loading,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"forgot/SET_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: false,\r\n                success: action.success,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n","import {SetPassInitState, SetPassStateType} from \"./SetPassInitState\";\r\nimport {SetPassActionsType} from \"./SetPassActions\";\r\n\r\nexport const setPassReducer =\r\n    (state = SetPassInitState, action: SetPassActionsType): SetPassStateType => {\r\n        switch (action.type) {\r\n            case \"setPass/SET_ERROR\": {\r\n                return {\r\n                    ...state,\r\n                    error: action.error,\r\n                    loading: false,\r\n                    success: false,\r\n                }\r\n            }\r\n            case \"setPass/SET_LOADING\": {\r\n                return {\r\n                    ...state,\r\n                    error: \"\",\r\n                    loading: action.loading,\r\n                    success: false,\r\n                }\r\n            }\r\n            case \"setPass/SET_SUCCESS\": {\r\n                return {\r\n                    ...state,\r\n                    error: \"\",\r\n                    loading: false,\r\n                    success: action.success,\r\n                }\r\n            }\r\n\r\n            default: {\r\n                return state\r\n            }\r\n        }\r\n    };\r\n","import {ProfileInitState, ProfileStateType} from \"./ProfileInitState\";\r\nimport {ProfileActionsType} from \"./ProfileActions\";\r\n\r\nexport const profileReducer =\r\n    (state = ProfileInitState, action: ProfileActionsType): ProfileStateType => {\r\n        switch (action.type) {\r\n            case \"profile/SET_USER\": {\r\n                return {\r\n                    ...state,\r\n                    user: action.user,\r\n                }\r\n            }\r\n            case \"profile/SET_ERROR\": {\r\n                return {\r\n                    ...state,\r\n                    error: action.error,\r\n                    loading: false,\r\n                    success: false,\r\n                }\r\n            }\r\n            case \"profile/SET_LOADING\": {\r\n                return {\r\n                    ...state,\r\n                    error: \"\",\r\n                    loading: action.loading,\r\n                    success: false,\r\n                }\r\n            }\r\n            case \"profile/SET_SUCCESS\": {\r\n                return {\r\n                    ...state,\r\n                    error: \"\",\r\n                    loading: false,\r\n                    success: action.success,\r\n                }\r\n            }\r\n\r\n            default: {\r\n                return state\r\n            }\r\n        }\r\n    };\r\n","import {PacksInitState, PacksStateType} from \"./PacksInitState\";\r\nimport {PacksActionsType} from \"./PacksActions\";\r\n\r\nexport const packsReducer =\r\n    (state = PacksInitState, action: PacksActionsType): PacksStateType => {\r\n        switch (action.type) {\r\n            case \"packs/SET_PACKS\": {\r\n                return {\r\n                    ...state,\r\n                    packs: action.packs,\r\n                }\r\n            }\r\n            case \"packs/SET_PACK_USER_ID\": {\r\n                return {\r\n                    ...state,\r\n                    packUser_id: action.packUser_id,\r\n                }\r\n            }\r\n\r\n            default: {\r\n                return state\r\n            }\r\n        }\r\n    };\r\n","import {CardsInitState, CardsStateType} from \"./CardsInitState\";\r\nimport {CardsActionsType} from \"./CardsActions\";\r\n\r\nexport const cardsReducer =\r\n    (state = CardsInitState, action: CardsActionsType): CardsStateType => {\r\n        switch (action.type) {\r\n            case \"cards/SET_CARDS\": {\r\n                return {\r\n                    ...state,\r\n                    cards: action.cards,\r\n                }\r\n            }\r\n\r\n            default: {\r\n                return state\r\n            }\r\n        }\r\n    };\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport Main from \"./main/Main\";\r\nimport store from \"../m-2-bll/store\";\r\nimport {DEV_VERSION} from \"../../config\";\r\n\r\n// add context\r\n// 3\r\nconst App = () => {\r\n\r\n    DEV_VERSION && console.log('render App');\r\n    return (\r\n        <div className=\"App\">\r\n            <HashRouter>\r\n                <Provider store={store}>\r\n                    <Main/>\r\n                </Provider>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./cnf-1-main/m-1-ui/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}